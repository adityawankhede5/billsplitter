{"version":3,"sources":["components/Titlebar.js","components/AddIcon.js","components/NewNameChip.js","components/NewMembersForm.js","components/Notification.js","components/NewBillNameForm.js","components/GetUser.js","components/NewBillForm.js","components/error404.js","components/EditBillForm.js","components/BillItemForm.js","components/ManageBill.js","components/BillBrief.js","components/AlertMessage.js","components/AllBills.js","App.js","index.js"],"names":["Titlebar","className","to","style","fontSize","marginLeft","this","props","children","Component","AddIcon","NewNameChip","toggleIsMember","setState","isMember","state","toggleIsPart","index","isPart","onClick","isEditable","opacity","pointerEvents","memberName","color","NewMembersForm","value","handleChange","bind","handleSubmit","event","target","preventDefault","inputTag","document","getElementById","borderBottom","addMember","id","onSubmit","type","placeholder","onChange","Notification","message","NewBillNameForm","a","async","isInEditMode","billName","replace","toLowerCase","allBillNames","includes","alreadyExists","setTimeout","isLoading","editBill","createNewBill","click","formatBillName","name","existingBillNames","display","GetUser","init","localStorage","getItem","isSignedIn","getUserFromDatabase","email","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","existingMembers","stringify","setItem","open","setRequestHeader","send","componentDidMount","setAppState","responseGoogle","error","profileObj","getStyle","position","top","bottom","left","right","flexDirection","justifyContent","alignItems","textAlign","getGoogleLogin","clientId","buttonText","onSuccess","onFailure","cookiePolicy","getLoadingScreen","NewBillForm","members","isDataAvailable","getSignedInStatus","getExistingMemberObjects","membersArray","length","map","member","toUpperCase","getMembersList","i","key","allMembers","push","billMembers","newMembers","forEach","currentBill","bill","concat","getExistingAssets","asset","renderForm","setTitle","Error404","EditBillForm","getBillName","pathname","location","split","errorMessage","isBillExist","BillItemForm","handleItemNameChange","itemName","handleItemAmountChange","itemAmount","getRowContainerStyles","marginTop","areInputsInvalid","isNameInvalid","isAmountInvalid","itemNameContainer","itemAmountContainer","amount","isNaN","parseFloat","getNameAndAmount","toFixed","itemDetails","setNameAndAmount","splitChecked","splitEqually","reset","step","width","ManageBill","getTitle","handleSplitAmountChange","memberState","getMembers","toggleIsChecked","marginRight","disabled","isChecked","toggleIsDue","updatedReceipt","receipt","memberIndex","indexOf","memberReceipt","isDue","isInvalid","total","getElementsByName","remaining","Math","abs","handleSplitFormSubmit","refs","itemForm","splitInto","paidBy","generateReceipt","resetSplitForm","changePaidBy","getMemberNameChips","getSplitForm","colSpan","checkedCount","lessAmount","assignTo","parts","selectAllMembers","getSplitIntoMembers","renderItem","renderReceiptItems","itemList","itemListView","item","getReceiptView","paidByMeTotal","paidForMeTotal","paidByMe","paidForMe","renderReceipt","receiptView","splitAmount","getBill","renderBillItemForm","ref","marginBottom","currentBillId","BillBrief","toggleShowReceipt","showReceipt","deleteBill","date","AlertMessage","textTransform","float","padding","cancelDeletion","confirmDeletion","AllBills","isAlertBoxRequired","billToBeDeleted","allBills","newAllBills","getBillBrief","Date","dateCreated","toDateString","getAllBillBriefs","getAllBills","billNames","App","window","resizeTo","title","basename","path","goto","ReactDOM","render"],"mappings":"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","file":"static/js/main.3a3db200.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Titlebar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"titlebar\">\r\n                <div><Link to=\"/billsplitter/home\"><i className=\"material-icons\">home</i></Link></div>\r\n                <div style={{fontSize: 'xx-large', marginLeft: '10px'}}>{this.props.children}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Titlebar\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport class AddIcon extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"addnewIconContainer\">\r\n                <Link to=\"/billsplitter/newbill\"><i className=\"material-icons addnewIcon\">add_circle</i></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddIcon\r\n","import React, { Component } from 'react'\r\n\r\nexport class NewNameChip extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isMember: this.props.isPart\r\n        }\r\n    }\r\n    toggleIsMember = ()=>{\r\n        this.setState({\r\n            isMember: !this.state.isMember\r\n        })\r\n        this.props.toggleIsPart(this.props.index);\r\n    }\r\n    render() {\r\n        return (\r\n            <span \r\n            className=\"newNameChip\" \r\n            onClick={this.toggleIsMember} \r\n            style={this.state.isMember ? \r\n                this.props.isEditable ? \r\n                    {opacity: 1, pointerEvents: 'auto'} \r\n                : \r\n                    {opacity: 1, pointerEvents: 'none'}\r\n                :\r\n                {opacity: 0.5, pointerEvents: 'auto'}}\r\n            >\r\n                {this.props.memberName}\r\n                <i className=\"material-icons chipControlIcon\" style={this.state.isMember ? {color: 'var(--red)'} : {color: 'var(--green)'}}>\r\n                    {this.state.isMember ? 'cancel' : 'add_circle'}\r\n                </i>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewNameChip\r\n","import React, { Component } from 'react'\r\n\r\nexport class NewMembersForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        // console.log(\"handling event\");\r\n        event.preventDefault();\r\n        const inputTag = document.getElementById('newMemberName');\r\n        inputTag.style.borderBottom = '1px solid var(--white)';\r\n        if(this.state.value===''){\r\n            inputTag.style.borderBottom = '1px solid var(--red)';\r\n            return;\r\n        }\r\n        if(this.props.addMember(this.state.value)===-1) return;\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form id=\"newMemberNames\" className=\"newMemberNames\" onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"member name\" className=\"appInputs\" id=\"newMemberName\" value={this.state.value} onChange={this.handleChange} />\r\n                <i className=\"material-icons\" onClick={this.handleSubmit}>add_circle</i>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewMembersForm\r\n","import React, { Component } from 'react'\r\n\r\nexport class Notification extends Component {\r\n    render() {\r\n        return (\r\n            <span \r\n                className=\"notification\" \r\n                id=\"notification\" \r\n                style={this.props.style}\r\n            >\r\n                {this.props.message}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Notification from './Notification';\r\n\r\nexport class NewBillNameForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isInEditMode = this.props.isInEditMode;\r\n        this.allBillNames = this.props.existingBillNames;\r\n        this.state = {\r\n            value: this.isInEditMode ? this.props.billName : '',\r\n            alreadyExists: false,\r\n        }\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = async (event) => {\r\n        if(!this.isInEditMode){\r\n            const inputTag = document.getElementById('newBillName');\r\n            inputTag.style.borderBottom = '1px solid var(--white)';\r\n            if(this.state.value===''){\r\n                inputTag.style.borderBottom = '1px solid var(--red)';\r\n                // event.preventDefault();\r\n                return;\r\n            }\r\n            const billName = this.state.value.replace(' ', '-').toLowerCase();\r\n            if(this.allBillNames.includes(billName)){\r\n                this.setState({\r\n                    alreadyExists: true\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        alreadyExists: false\r\n                    })\r\n                },2000)\r\n                // event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n        const billName = this.state.value.replace(' ', '-').toLowerCase();\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        this.isInEditMode ? await this.props.editBill(billName) : await this.props.createNewBill(billName);\r\n        document.getElementById('nextpagelink').click();\r\n    }\r\n\r\n    formatBillName = (name) => {\r\n        return name.replace(\" \", \"-\");\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div name=\"newBillName\" className=\"newBillName\">\r\n                    <Notification message={\"Bill with same exists\"} style={{display: this.state.alreadyExists ? 'block' : 'none'}} />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"bill name\" \r\n                        className=\"appInputs\" \r\n                        id=\"newBillName\" \r\n                        value={this.state.value} \r\n                        onChange={this.handleChange} \r\n                        style={this.isInEditMode ? {pointerEvents: 'none'} : {pointerEvents: 'auto'}}\r\n                    />\r\n                    <i className=\"material-icons checkIcon\" onClick={this.handleSubmit}>check_circle</i>\r\n                    <Link to={`/billsplitter/manage/${this.formatBillName(this.state.value)}`} id=\"nextpagelink\"></Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewBillNameForm\r\n","import React, { Component } from 'react'\r\nimport { GoogleLogin } from 'react-google-login'; \r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class GetUser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.setAppState(\"title\", \"Log In\")\r\n        this.state = this.init();\r\n        \r\n    }\r\n\r\n    init = () => {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            // console.log(\"Signed IN\");\r\n            return {isSignedIn: true, isLoading: false}\r\n        }\r\n        return {isSignedIn: false, isLoading: false}\r\n    }\r\n\r\n    getUserFromDatabase = (email, name) => {\r\n        return new Promise((resolve, reject)=>{\r\n            // MAKE API CALL HERE.\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    // console.log(xhr.responseText);\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const existingMembers = JSON.stringify(response.existingMembers);\r\n                    const existingBillNames = JSON.stringify(response.existingBillNames);\r\n                    localStorage.setItem(\"existingMembers\", existingMembers);\r\n                    localStorage.setItem(\"existingBillNames\", existingBillNames);\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getuser\");\r\n            xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/getuser\");\r\n            xhr.setRequestHeader(\"email\", email);\r\n            xhr.setRequestHeader(\"name\", name);\r\n            xhr.send();\r\n        })\r\n        \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        if(this.state.isSignedIn){\r\n            const email=localStorage.getItem(\"email\");\r\n            const name=localStorage.getItem(\"name\");\r\n            this.props.setAppState(\"email\", email);\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            await this.getUserFromDatabase(email, name);\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n            // console.log(\"Was signed in.\", user);\r\n            document.getElementById('linktohome').click();\r\n        }\r\n    }\r\n\r\n    responseGoogle = async (response) => {\r\n        if(response.error){\r\n            return;\r\n        }\r\n        const email = response.profileObj.email;\r\n        const name = response.profileObj.name;\r\n        // console.log(email, name);\r\n        localStorage.setItem(\"email\", email);\r\n        localStorage.setItem(\"name\", name);\r\n        this.props.setAppState(\"email\", email);\r\n        localStorage.setItem(\"isSignedIn\", \"true\");\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        await this.getUserFromDatabase(email, name);\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n        // console.log(\"Was not signed in.\", user);\r\n\r\n        document.getElementById('linktohome').click();\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            position: 'fixed',\r\n            top: '0px',\r\n            bottom: '0px',\r\n            left: '0px',\r\n            right: '0px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center'\r\n        }\r\n    }\r\n\r\n    getGoogleLogin = () =>{\r\n        if(this.state.isSignedIn){\r\n            return <span></span>    \r\n        }\r\n        return <div style={this.getStyle()}>\r\n            <h2>You must be logged in to use this website.</h2>\r\n        <GoogleLogin\r\n                clientId=\"748883507287-vd5sq0o1i30l6pk7vh4fuusi77voh1mp.apps.googleusercontent.com\"\r\n                buttonText=\"Log in\"\r\n                onSuccess={this.responseGoogle}\r\n                onFailure={this.responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n        />\r\n\r\n    </div>\r\n    }\r\n    getLoadingScreen = () => {\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n            <div style={this.state.isLoading ? {opacity: 0.5, pointerEvents: 'none'}: {opacity: 1, pointerEvents: 'auto'}}>            \r\n                <Link to=\"/billsplitter/home\" id=\"linktohome\"></Link>\r\n                {this.getGoogleLogin()}\r\n            </div>\r\n                {this.state.isLoading ? this.getLoadingScreen() : ''}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default GetUser\r\n","import React, { Component } from 'react';\r\nimport NewNameChip from './NewNameChip';\r\nimport NewMembersForm from './NewMembersForm';\r\nimport NewBillNameForm from './NewBillNameForm';\r\nimport Notification from './Notification';\r\n// import { Link } from 'react-router-dom';\r\nimport GetUser from './GetUser';\r\n\r\nexport class NewBillForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props.setTitle(\"New Bill\");\r\n        this.email = \"\";\r\n        this.existingMembers = [];\r\n        this.existingBillNames = [];\r\n        this.state = this.init();\r\n    }\r\n\r\n    init = ()=>{\r\n        return {\r\n            members: [],\r\n            alreadyExists: false,\r\n            isDataAvailable: false,\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isLoading: false,\r\n        };\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            this.existingBillNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    getExistingMemberObjects = (existingMembers) => {\r\n        let membersArray = [];\r\n        if(existingMembers.length!==0){\r\n                membersArray = existingMembers.map(member=> {\r\n                if(member.toUpperCase()===\"ME\") return {name: member, isPart: true}\r\n                return {name: member, isPart: false}\r\n            })\r\n        }\r\n        return membersArray;\r\n    }\r\n\r\n    getMembersList = (members) =>{\r\n        return members.map(\r\n            (member, i)=> \r\n                <NewNameChip \r\n                    memberName={member.name} \r\n                    isPart={member.isPart} \r\n                    isEditable={true}\r\n                    key={i} \r\n                    index={i} \r\n                    toggleIsPart={this.toggleIsPart}\r\n                />\r\n        )\r\n    }\r\n    \r\n    addMember = (name) =>{\r\n        const allMembers = this.state.members;\r\n        for(let i=0;i<allMembers.length;i++){\r\n            if(allMembers[i].name.toUpperCase()===name.toUpperCase()){\r\n                this.setState({\r\n                    alreadyExists: true\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        alreadyExists: false\r\n                    })\r\n                },2000)\r\n                return -1;\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            member: this.state.members.push({name, isPart: true}),\r\n            alreadyExists: false\r\n        });\r\n        return 0;\r\n    }\r\n\r\n    toggleIsPart = (key) => {\r\n        const allMembers = this.state.members;\r\n        allMembers[key].isPart = !allMembers[key].isPart;\r\n        this.setState({\r\n            members: allMembers\r\n        })\r\n        // console.log(this.state);\r\n    }\r\n\r\n    createNewBill = (billName)=>{\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        return new Promise((resolve, reject)=> {\r\n            let billMembers = [];\r\n            let newMembers = [];\r\n            const existingMembers = this.existingMembers;\r\n            this.state.members.forEach(member=>{\r\n                if(member.isPart) {\r\n                    billMembers.push(member.name);\r\n                    if(existingMembers.includes(member.name)===false){\r\n                        newMembers.push(member.name);\r\n                    }\r\n                }\r\n            })\r\n\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    this.setState({\r\n                        isLoading: false\r\n                    })\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const currentBill = response.bill;\r\n                    // this.props.setAppState(\"currentBill\", currentBill.billName);\r\n                    const existingBillNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n                    let existingMembers = JSON.parse(localStorage.getItem(\"existingMembers\"));\r\n                    existingMembers = existingMembers.concat(newMembers);\r\n                    existingBillNames.push(currentBill.billName);\r\n                    localStorage.setItem(\"existingMembers\", JSON.stringify(existingMembers));\r\n                    localStorage.setItem(\"existingBillNames\", JSON.stringify(existingBillNames));\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/createbill\");\r\n            xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/createbill\");\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", billName);\r\n            xhr.setRequestHeader(\"members\", JSON.stringify(billMembers));\r\n            xhr.setRequestHeader(\"newmembers\", JSON.stringify(newMembers));\r\n            xhr.send();\r\n        });\r\n        \r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        if(!this.state.isLoading){\r\n            this.getExistingAssets();\r\n        }\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n\r\n    getExistingAssets = () => {\r\n        return new Promise((resolve, reject)=>{\r\n        \r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const asset = response.asset;\r\n                    const existingBillNames = asset.existingBillNames;\r\n                    this.existingMembers = asset.existingMembers;\r\n                    const members = this.getExistingMemberObjects(asset.existingMembers);\r\n                    this.setState({\r\n                        existingBillNames,\r\n                        members,\r\n                        isDataAvailable: true\r\n                    });\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getexisitingassets\");\r\n            xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/getexisitingassets\");\r\n            xhr.setRequestHeader(\"email\", localStorage.getItem(\"email\"));\r\n            xhr.send();\r\n        })\r\n    }\r\n    \r\n    \r\n    renderForm = () => {\r\n        return (\r\n        <div className=\"newBillForm\" style={this.state.isLoading ? {opacity: 0.5, pointerEvents: 'none'} : {opacity: 1, pointerEvents: 'auto'} }>\r\n            <Notification message={\"Select From list\"} style={{display: this.state.alreadyExists ? 'block' : 'none'}} />\r\n            <NewMembersForm addMember={this.addMember} />\r\n            <NewBillNameForm \r\n                createNewBill={this.createNewBill} \r\n                setTitle={this.props.setTitle} \r\n                existingBillNames={this.existingBillNames}\r\n                isInEditMode={false}\r\n            />\r\n            <div className=\"newMembers\">\r\n                {this.getMembersList(this.state.members)}\r\n            </div>\r\n        \r\n        </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n            \r\n            {this.state.isSignedIn ? \r\n                this.state.isDataAvailable ? \r\n                    this.renderForm() : this.getLoadingScreen() \r\n                : \r\n                <GetUser setAppState={this.props.setAppState} />\r\n            }\r\n            \r\n            {this.state.isLoading ? this.getLoadingScreen() : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewBillForm\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Error404 extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"error404Container\">\r\n                <span className=\"errorCode\" style={{fontSize: '70px'}}>404</span>\r\n                <span>Page not found</span>\r\n                <span>{this.props.message}</span>\r\n                <span>Go to:</span>\r\n                <Link to=\"/billsplitter/home\"><i className=\"material-icons\">home</i></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error404\r\n","import React, { Component } from 'react';\r\nimport NewNameChip from './NewNameChip';\r\nimport NewMembersForm from './NewMembersForm';\r\nimport NewBillNameForm from './NewBillNameForm';\r\nimport Notification from './Notification';\r\n// import { Link } from 'react-router-dom';\r\nimport GetUser from './GetUser';\r\nimport Error404 from './error404';\r\n\r\nexport class EditBillForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props.setAppState(\"title\",\"Edit Bill\");\r\n        this.email = \"\";\r\n        this.billName = \"\";\r\n        this.existingMembers = [];\r\n        this.state = {\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isBillExist: true,\r\n            isDataAvailable: false,\r\n            members: [],\r\n            alreadyExists: false,\r\n            errorMessage: '',\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    // init = ()=>{\r\n    //     setTimeout(()=>{console.log(this.state);},5000);\r\n    //     return {\r\n    //         isSignedIn: this.getSignedInStatus(),\r\n    //         members: [],\r\n    //         alreadyExists: false,\r\n    //         isDataAvailable: false,\r\n    //     };\r\n    // }\r\n\r\n    getBillName = () => {\r\n        const pathname = document.location.pathname;\r\n        if(pathname===\"/manage\" || pathname===\"/manage/\"){\r\n            return \"\";\r\n        }\r\n        let billName = pathname.split(\"/\");\r\n        billName = billName[billName.length-1];\r\n        const existingBillNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n        if(existingBillNames.includes(billName)){\r\n            return billName;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            this.billName = this.getBillName();\r\n            this.existingMembers = JSON.parse(localStorage.getItem(\"existingMembers\"));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    getExistingMemberObjects = (billMembers,existingMembers) => {\r\n        let membersArray = [];\r\n        if(existingMembers.length!==0){\r\n                membersArray = existingMembers.map(member=> {\r\n                if(billMembers.includes(member)) return {name: member, isPart: true, isEditable: false}\r\n                return {name: member, isPart: false, isEditable: true}\r\n            })\r\n        }\r\n        return membersArray;\r\n    }\r\n\r\n    getMembersList = (members) =>{\r\n        return members.map(\r\n            (member, i)=> \r\n                <NewNameChip \r\n                    memberName={member.name} \r\n                    isPart={member.isPart} \r\n                    isEditable={member.isEditable}\r\n                    key={i} \r\n                    index={i} \r\n                    toggleIsPart={this.toggleIsPart}\r\n                />\r\n        )\r\n    }\r\n    \r\n    addMember = (name) =>{\r\n        const allMembers = this.state.members;\r\n        for(let i=0;i<allMembers.length;i++){\r\n            if(allMembers[i].name.toUpperCase()===name.toUpperCase()){\r\n                this.setState({\r\n                    alreadyExists: true\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        alreadyExists: false\r\n                    })\r\n                },2000)\r\n                return -1;\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            member: this.state.members.push({name, isPart: true, isEditable: true}),\r\n            alreadyExists: false\r\n        });\r\n        return 0;\r\n    }\r\n\r\n    toggleIsPart = (key) => {\r\n        const allMembers = this.state.members;\r\n        allMembers[key].isPart = !allMembers[key].isPart;\r\n        this.setState({\r\n            members: allMembers\r\n        })\r\n        // console.log(this.state);\r\n    }\r\n\r\n    editBill = (billName)=>{\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        return new Promise((resolve, reject)=> {\r\n            let billMembers = [];\r\n            let newMembers = [];\r\n            const existingMembers = this.existingMembers;\r\n            this.state.members.forEach(member=>{\r\n                if(member.isPart) {\r\n                    billMembers.push(member.name);\r\n                    if(existingMembers.includes(member.name)===false){\r\n                        newMembers.push(member.name);\r\n                    }\r\n                }\r\n            })\r\n\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    this.setState({\r\n                        isLoading: false\r\n                    })\r\n                    // const response = JSON.parse(xhr.responseText);\r\n                    // const currentBill = response.bill;\r\n                    let existingMembers = JSON.parse(localStorage.getItem(\"existingMembers\"));\r\n                    existingMembers = existingMembers.concat(newMembers);\r\n                    localStorage.setItem(\"existingMembers\", JSON.stringify(existingMembers));\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/addmembertobill\");\r\n            xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/addmembertobill\");\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", billName);\r\n            xhr.setRequestHeader(\"members\", JSON.stringify(billMembers));\r\n            xhr.setRequestHeader(\"newmembers\", JSON.stringify(newMembers));\r\n            xhr.send();\r\n        });\r\n        \r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        if(!this.state.isLoading){\r\n            this.getExistingAssets();\r\n        }\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n\r\n    getExistingAssets = () => {\r\n        return new Promise((resolve, reject)=>{\r\n        \r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    // console.log(response)\r\n                    const billMembers = response.members;\r\n                    const members = this.getExistingMemberObjects(billMembers, this.existingMembers);\r\n                    this.setState({\r\n                        members,\r\n                        isDataAvailable: true,\r\n                    });\r\n                    resolve(true);\r\n                }else if(xhr.readyState===4 && xhr.status===404){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const errorMessage = response.message;\r\n                    this.setState({\r\n                        isBillExist: false,\r\n                        errorMessage\r\n                    })\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getbillmembers\");\r\n            xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/getbillmembers\");\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", this.billName);\r\n            xhr.send();\r\n        })\r\n    }\r\n    \r\n    \r\n    renderForm = () => {\r\n        return (\r\n        <div className=\"newBillForm\" style={this.state.isLoading ? {opacity: 0.5, pointerEvents: 'none'}:{opacity: 1, pointerEvents: 'auto'} }>\r\n            <Notification message={\"Select From list\"} style={{display: this.state.alreadyExists ? 'block' : 'none'}} />\r\n            <NewMembersForm addMember={this.addMember} />\r\n            <NewBillNameForm \r\n                setTitle={this.props.setTitle} \r\n                existingBillNames={this.existingBillNames}\r\n                isInEditMode={true}\r\n                billName={this.billName}\r\n                editBill={this.editBill}\r\n            />\r\n            <div className=\"newMembers\">\r\n                {this.getMembersList(this.state.members)}\r\n            </div>\r\n        \r\n        </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n            \r\n            {this.state.isSignedIn ?\r\n                this.state.isBillExist ?  \r\n                    this.state.isDataAvailable ? \r\n                        this.renderForm() : this.getLoadingScreen() \r\n                :\r\n                <Error404 message={this.state.errorMessage}/>\r\n            : \r\n            <GetUser setAppState={this.props.setAppState} />\r\n            }\r\n            \r\n            {this.state.isLoading ? this.getLoadingScreen() : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditBillForm\r\n","import React, { Component } from 'react'\r\n\r\nexport class BillItemForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            itemName: '',\r\n            itemAmount: ''\r\n        }\r\n    }\r\n    \r\n    handleItemNameChange = (event) => {\r\n\r\n        this.setState({\r\n            itemName: event.target.value\r\n        });\r\n\r\n        // console.log(this.state.itemName);\r\n    }\r\n    \r\n    handleItemAmountChange = (event) => {\r\n        this.setState({\r\n            itemAmount: event.target.value\r\n        })\r\n        // console.log(this.state.itemAmount);\r\n    }\r\n\r\n    getRowContainerStyles = () => {\r\n        return {\r\n            display: 'flex', \r\n            flexDirection: 'row', \r\n            marginTop: '5px', \r\n            justifyContent: 'space-between',\r\n            alignItems: 'center'\r\n        }\r\n    }\r\n\r\n    areInputsInvalid = () => {\r\n        let isNameInvalid=false, isAmountInvalid=false;\r\n        const itemNameContainer = document.getElementById('itemName');\r\n        const itemAmountContainer = document.getElementById('itemAmount');\r\n        const name = this.state.itemName;\r\n        const amount = this.state.itemAmount;\r\n\r\n        itemNameContainer.style.borderBottom = '1px solid var(--white)'\r\n        itemAmountContainer.style.borderBottom = '1px solid var(--white)'\r\n        if(name===''){\r\n            itemNameContainer.style.borderBottom = '1px solid var(--red)';\r\n            isNameInvalid=true;\r\n        }\r\n        if(isNaN(parseFloat(amount))){\r\n            itemAmountContainer.style.borderBottom = '1px solid var(--red)';\r\n            isAmountInvalid=true;\r\n        }\r\n        if(isNameInvalid || isAmountInvalid){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getNameAndAmount = ()=>{\r\n        return [this.state.itemName, parseFloat(parseFloat(this.state.itemAmount).toFixed(2))]\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(this.areInputsInvalid()) return;\r\n        // console.log(\"Valid Inputs:\", this.state.itemAmount, this.state.itemName);\r\n\r\n\r\n        // INPUTS ARE VALID\r\n        const itemDetails = this.getNameAndAmount();\r\n        const name = itemDetails[0];\r\n        const amount = itemDetails[1];\r\n        this.props.setNameAndAmount(name, amount);\r\n        if(event.target.id==='split') this.props.splitChecked(name, amount);\r\n        else this.props.splitEqually(name, amount);\r\n        \r\n        \r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            itemName: '',\r\n            itemAmount: ''\r\n            \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form name=\"billItemForm\" className=\"billItemForm\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"item name\" id=\"itemName\" className=\"appInputs\" value={this.state.itemName} onChange={this.handleItemNameChange}/>\r\n                    <div style={this.getRowContainerStyles()}>\r\n                        <input \r\n                            type=\"number\"\r\n                            step=\"any\" \r\n                            placeholder=\"0.00\" \r\n                            id=\"itemAmount\" \r\n                            className=\"appInputs\" \r\n                            style={{width: \"55%\"}} \r\n                            value={this.state.itemAmount} \r\n                            onChange={this.handleItemAmountChange}\r\n                        />\r\n                        <div>\r\n                            <span className=\"text-icons\" id=\"split\" onClick={this.handleSubmit}>Split</span>\r\n                            <span className=\"text-icons\" id=\"splitequal\" onClick={this.handleSubmit}>Split=</span>\r\n                        </div>\r\n                    </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BillItemForm\r\n","import React, { Component } from 'react'\r\nimport BillItemForm from './BillItemForm'\r\nimport GetUser from './GetUser';\r\nimport { Link } from 'react-router-dom';\r\nimport Error404 from './error404';\r\n\r\nexport class ManageBill extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.billName = \"\";\r\n        this.email = \"\";\r\n        this.members = [];\r\n        this.currentBillId = '';\r\n        // this.state = this.initState();\r\n        this.state = {\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isBillExist: this.billName === \"\" ? false : true,\r\n            isDataAvailable: false,\r\n            billName: this.billName,\r\n            itemName: '', \r\n            itemAmount: 0.00,\r\n            total: 0.00, \r\n            remaining: 0.00, \r\n            receipt: [], \r\n            paidBy: ''\r\n        }\r\n        \r\n    }\r\n\r\n    getTitle = (billName) => {\r\n        return billName.replace(\"-\", \" \");\r\n    }\r\n\r\n    getBillName = () => {\r\n        const pathname = document.location.pathname;\r\n        if(pathname===\"/manage\" || pathname===\"/manage/\"){\r\n            return \"\";\r\n        }\r\n        let billName = pathname.split(\"/\");\r\n        billName = billName[billName.length-1];\r\n        const existingBillNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n        if(existingBillNames.includes(billName)){\r\n            return billName;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            this.billName = this.getBillName();\r\n            this.props.setAppState(\"title\",this.getTitle(this.billName));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleSplitAmountChange = (event)=>{\r\n        const member = event.target.name;\r\n        const memberState = this.state[`${member}`];\r\n        memberState.amount = event.target.value;\r\n        this.setState({\r\n            [member]: memberState\r\n        })\r\n    }\r\n\r\n    \r\n    getMembers = (members) => {\r\n        return (\r\n            members.map((member, i)=>{\r\n                const memberState = this.state[`${member}`];\r\n                return <tr key={i}>\r\n                    <td width=\"70%\" onClick={()=>{this.toggleIsChecked(member,i)}}>\r\n                        {member}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\", marginRight: '5px'}}>\r\n                        <input \r\n                        type=\"number\" \r\n                        step=\"any\"\r\n                        className=\"appInputs\" \r\n                        onChange={this.handleSplitAmountChange} \r\n                        value={memberState.amount} \r\n                        style={{width: \"70px\"}} \r\n                        name={`${member}`} \r\n                        id={`${i}-splitAmount`}\r\n                        placeholder=\"0.00\"\r\n                        disabled = {memberState.isChecked ? \"\" : \"disabled\"} \r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <i className=\"material-icons\" style={{fontSize: 'x-large'}} onClick={()=>{this.toggleIsChecked(member,i)}}>\r\n                            {memberState.isChecked ? 'check_circle_outline' : 'radio_button_unchecked'}\r\n                        </i>\r\n                    </td>\r\n                </tr>\r\n            })\r\n        )\r\n    }\r\n\r\n    toggleIsChecked = (member) => {\r\n        const memberState = this.state[`${member}`];\r\n        memberState.isChecked = !memberState.isChecked;\r\n        this.setState({\r\n            [member]: memberState\r\n        });\r\n    }\r\n\r\n    toggleIsDue = (member) => {\r\n        document.getElementById('memberWiseReceipt').style.opacity = 0.5;\r\n        document.getElementById('memberWiseReceipt').style.pointerEvents = \"none\";\r\n        let updatedReceipt = this.state.receipt;\r\n        const memberIndex = this.members.indexOf(member);\r\n        const memberReceipt = this.state.receipt[memberIndex];\r\n        memberReceipt.isDue = !memberReceipt.isDue;\r\n        updatedReceipt[memberIndex]=memberReceipt;\r\n        \r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState===4 && xhr.status===200){ \r\n            document.getElementById('memberWiseReceipt').style.opacity = 1;\r\n            document.getElementById('memberWiseReceipt').style.pointerEvents = \"auto\";\r\n                this.setState({\r\n                    receipt: updatedReceipt\r\n                });\r\n            }\r\n        }\r\n        // xhr.open(\"GET\", \"http://localhost:3090/api/v1/updatereceipt\");\r\n        xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/updatereceipt\");\r\n        xhr.setRequestHeader(\"email\", this.email);\r\n        xhr.setRequestHeader(\"billname\", this.billName);\r\n        xhr.setRequestHeader(\"receipt\", JSON.stringify(updatedReceipt));\r\n        xhr.send();\r\n\r\n        // CALL API\r\n    }\r\n\r\n    areInputsInvalid = (itemAmount) => {\r\n        var isInvalid = false;\r\n        let total=0;\r\n        this.members.forEach((member) => {\r\n            document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--white)';\r\n            let memberState = this.state[`${member}`];\r\n            if(memberState.isChecked){\r\n                if(isNaN(parseFloat(memberState.amount))){\r\n                    isInvalid = true;\r\n                    document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--red)'\r\n                }else{\r\n                    total+=parseFloat(memberState.amount);\r\n                }\r\n            }\r\n        })\r\n        total = parseFloat(total.toFixed(2));\r\n        if(isInvalid) return true;\r\n        \r\n        this.setState({\r\n            total: total,\r\n            remaining: (itemAmount-total).toFixed(2)\r\n        })\r\n\r\n        if(Math.abs(itemAmount-total)>1) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    handleSplitFormSubmit = (event)=> {\r\n        event.preventDefault();\r\n        document.getElementById('memberWiseReceipt').style.opacity = 0.5;\r\n        document.getElementById('memberWiseReceipt').style.pointerEvents = \"none\";\r\n        if(this.refs.itemForm.areInputsInvalid()) return;\r\n        const itemDetails = this.refs.itemForm.getNameAndAmount();\r\n        this.setNameAndAmount(itemDetails[0], itemDetails[1]);\r\n        if(this.areInputsInvalid(itemDetails[1])) return;\r\n\r\n        // GENERATE ITEM BILL OBJECT\r\n        let splitInto = [];\r\n        this.members.forEach(member=>{\r\n            const memberState = this.state[`${member}`];\r\n            if(memberState.isChecked){\r\n                // splitInto.push({[member]: parseFloat(memberState.amount)})   \r\n                splitInto.push({name: member, amount: parseFloat(memberState.amount)})\r\n            }\r\n        })\r\n        let bill = {\r\n            itemName: this.state.itemName, \r\n            paidBy: this.state.paidBy, \r\n            itemAmount: parseFloat(this.state.itemAmount), \r\n            splitInto: splitInto\r\n        };\r\n        const receipt = this.generateReceipt(bill);\r\n\r\n        // console.log(\"Calling the api\");\r\n        // MAKE API CALL TO UPDATE RECEIPT\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState===4 && xhr.status===200){\r\n                \r\n            document.getElementById('memberWiseReceipt').style.opacity = 1;\r\n            document.getElementById('memberWiseReceipt').style.pointerEvents = \"auto\";\r\n                this.setState({\r\n                    receipt: receipt\r\n                });\r\n            }\r\n        }\r\n        // xhr.open(\"GET\", \"http://localhost:3090/api/v1/updatereceipt\");\r\n        xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/updatereceipt\");\r\n        xhr.setRequestHeader(\"email\", this.email);\r\n        xhr.setRequestHeader(\"billname\", this.billName);\r\n        xhr.setRequestHeader(\"receipt\", JSON.stringify(receipt));\r\n        xhr.send();\r\n\r\n        // RESET FORMS\r\n        this.resetSplitForm();\r\n        this.refs.itemForm.reset();\r\n    }\r\n\r\n    changePaidBy = (event) => {\r\n        this.setState({\r\n            paidBy: event.target.id\r\n        })\r\n    }\r\n\r\n    getMemberNameChips = () => {\r\n        return this.members.map((member, i)=>{\r\n            return <span \r\n                key={i} \r\n                className=\"nameChip\"\r\n                id={member}\r\n                onClick={this.changePaidBy} \r\n                style={{opacity: this.state.paidBy===member ? 1 : 0.3}}\r\n                >\r\n                    {member}\r\n                </span>\r\n        })\r\n    }\r\n\r\n    getSplitForm = ()=> {\r\n        return <table style={{width: \"100%\"}} className=\"splitAmounts\">\r\n        <tbody>\r\n        {this.getMembers(this.members)}\r\n        <tr>\r\n            <td width=\"70%\" style={{textAlign: \"right\", fontSize: \"medium\"}}>Total: </td>\r\n            <td colSpan=\"2\">{this.state.total.toFixed(2)}</td>\r\n        </tr>\r\n        <tr style={{color: Math.abs(this.state.remaining) > 1 ? 'var(--red)' : 'var(--white)'}}>\r\n            <td width=\"70%\" style={{textAlign: \"right\", fontSize: \"medium\"  }}>Remaining: </td>\r\n            <td colSpan=\"2\">{this.state.remaining}</td>\r\n        </tr>\r\n        <tr>\r\n            <td colSpan=\"3\">Paid By:</td>\r\n        </tr>\r\n        <tr>\r\n            <td className=\"nameChipContainer\">\r\n                {this.getMemberNameChips()}\r\n            </td>\r\n            <td colSpan=\"2\" style={{textAlign: \"right\"}}>\r\n                <i className=\"material-icons\" onClick={this.handleSplitFormSubmit}>add_circle</i>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n        </table>\r\n    }\r\n\r\n    setNameAndAmount = (name, amount) => {\r\n        this.setState({\r\n            itemName: name,\r\n            itemAmount: amount\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    splitChecked = (name, amount) => {\r\n        let checkedCount=0;\r\n        let lessAmount=0;\r\n        let assignTo = [];\r\n        let isInvalid = false;\r\n        this.members.forEach(member => {\r\n            \r\n            document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--white)';\r\n            let memberState = this.state[`${member}`];\r\n            if(memberState.isChecked){\r\n                \r\n                if(memberState.amount===''){\r\n                    ++checkedCount;\r\n                    assignTo.push(member);\r\n                }\r\n                else if(isNaN(memberState.amount)){\r\n                    isInvalid=true;\r\n                    document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--red)';\r\n                }\r\n                else{\r\n                    lessAmount+=memberState.amount;    \r\n                }\r\n            }\r\n        })\r\n        if(isInvalid) return;\r\n\r\n        amount=amount-lessAmount;\r\n        const parts = parseFloat((amount/checkedCount).toFixed(2));\r\n        assignTo.forEach(member=>{\r\n            let memberState = this.state[`${member}`];\r\n            memberState.amount = parts;\r\n            this.setState({\r\n                [member]: memberState\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    splitEqually = (name, amount) => {\r\n        let assignTo = [];\r\n        this.members.forEach(member => {\r\n            document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--white)';\r\n            let memberState = this.state[`${member}`];\r\n            if(memberState.isChecked){\r\n                assignTo.push(member);\r\n            }\r\n        })\r\n\r\n        const parts = parseFloat((amount/assignTo.length).toFixed(2));\r\n        // console.log(typeof parts);\r\n        assignTo.forEach(member=>{\r\n            let memberState = this.state[`${member}`];\r\n            memberState.amount = parts;\r\n            this.setState({\r\n                [member]: memberState\r\n            })\r\n        })\r\n    }\r\n\r\n    resetSplitForm = () => {\r\n        this.members.forEach(member=>{\r\n            const memberState = this.state[`${member}`];\r\n            memberState.amount = '';\r\n            this.setState({\r\n                [member]: memberState\r\n            })\r\n        })\r\n    }\r\n\r\n    selectAllMembers = () => {\r\n        this.members.forEach(member=>{\r\n            const memberState = this.state[`${member}`];\r\n            memberState.isChecked = true;\r\n            this.setState({\r\n                [member]: memberState\r\n            })\r\n        })\r\n    }\r\n\r\n    getSplitIntoMembers = (splitInto) => {\r\n        return splitInto.map((member, i)=>{\r\n            const name = member.name;\r\n            const amount = member.amount;\r\n            return <tr key={i}>\r\n                <td>{name}</td>\r\n                <td style={{textAlign: \"right\"}}>{amount.toFixed(2)}</td>\r\n            </tr>\r\n        })\r\n    }\r\n\r\n    renderItem = (name, amount, key) => {\r\n        return <tr key={key}>\r\n            <td>{name}</td>\r\n            <td>{amount.toFixed(2)}</td>\r\n        </tr>\r\n    }\r\n\r\n    renderReceiptItems = (itemList) => {\r\n        let itemListView = [];\r\n        // let key=0;\r\n        itemList.forEach((item,i)=>{\r\n            itemListView.push(this.renderItem(item.name, item.amount, i));\r\n        })\r\n        // for(let item in itemList){\r\n        //     itemListView.push(this.renderItem(item, itemList[item], key++));\r\n        // }\r\n        return itemListView;\r\n    }\r\n\r\n    getReceiptView = (name, memberReceipt, key) => {\r\n        const paidByMeTotal = memberReceipt.paidByMeTotal;\r\n        const paidForMeTotal = memberReceipt.paidForMeTotal;\r\n\r\n        return <div key={key}> \r\n        <div className=\"memberReceiptView\" >\r\n            {/* BRIEFS TABLE */}\r\n            <div> \r\n                <table><tbody>\r\n                    <tr>\r\n                        <td><ins><strong>{name}</strong></ins></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{fontSize: 'small'}}>paid</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{paidByMeTotal.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td  style={{fontSize: 'small'}}>owes</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{paidForMeTotal.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{fontSize: 'small'}}>total</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{(paidByMeTotal-paidForMeTotal).toFixed(2)}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {/* PAID BY ME TABLE */}\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{opacity: 0.5}}>paid</td>\r\n                    </tr>\r\n                    {this.renderReceiptItems(memberReceipt.paidByMe)}\r\n                </tbody></table>\r\n            </div>\r\n            \r\n            {/* OWES TABLE */}\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{opacity: 0.5}}>owes</td>\r\n                    </tr>\r\n                    {this.renderReceiptItems(memberReceipt.paidForMe)}\r\n                </tbody></table>\r\n            </div>\r\n        </div>\r\n        <div className=\"dueStatus\">\r\n            <i className=\"material-icons\" \r\n                onClick={()=>{this.toggleIsDue(name)}}\r\n                style={{color: memberReceipt.isDue ? \"var(--white)\" : \"var(--green)\", fontSize: 'x-large'}}\r\n            >\r\n                {memberReceipt.isDue ? \"watch_later\" : \"done_all\"}\r\n            </i>\r\n        </div>\r\n        </div>\r\n    }\r\n\r\n\r\n    renderReceipt = () => {\r\n        let receipt = this.state.receipt;\r\n        // console.log(receipt);\r\n        let receiptView = [];\r\n        // let key = 0;\r\n        receipt.forEach((member, i)=>{\r\n            receiptView.push(this.getReceiptView(member.name, receipt[i], i));\r\n        })\r\n        // for(let member in receipt){\r\n        //     receiptView.push(this.getReceiptView(member, receipt[member] ,key++))\r\n        // }\r\n        return receiptView;\r\n    }\r\n\r\n    generateReceipt = (bill) => {\r\n        let receipt = this.state.receipt;\r\n        \r\n        // console.log(item);\r\n        // ADD PAID BY DETAILS\r\n        const paidBy = bill.paidBy;\r\n        const memberIndex = this.members.indexOf(paidBy);\r\n        let memberReceipt= receipt[memberIndex];\r\n        // memberReceipt.paidByMe = {...memberReceipt.paidByMe, [bill.itemName]: bill.itemAmount}\r\n        memberReceipt.paidByMe.push({name: bill.itemName, amount: bill.itemAmount});\r\n        memberReceipt.paidByMeTotal += bill.itemAmount;\r\n\r\n        // ADD PAID FOR DETAILS\r\n        bill.splitInto.forEach(member=>{\r\n            const memberName = member.name;\r\n            const memberIndex = this.members.indexOf(memberName);\r\n            memberReceipt = receipt[memberIndex];\r\n            const splitAmount = member.amount;\r\n            // memberReceipt.paidForMe = {...memberReceipt.paidForMe, [bill.itemName]: splitAmount}\r\n            memberReceipt.paidForMe.push({name: bill.itemName, amount: splitAmount});\r\n            memberReceipt.paidForMeTotal += splitAmount;\r\n        });\r\n        \r\n        // console.log(receipt);\r\n        // this.setState({\r\n        //     receipt: receipt\r\n        // })\r\n        return receipt;\r\n    }\r\n\r\n    getBill = () => {\r\n        return new Promise((resolve, reject)=>{\r\n            const billName = this.state.billName;\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    // console.log(response);\r\n                    const bill = response.bill;\r\n                    this.members = bill.members;\r\n                    \r\n                    this.members.forEach((member)=>{\r\n                        this.setState({\r\n                            [member]: {isChecked: true, amount: ''}\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        receipt: bill.receipt,\r\n                        paidBy: this.members[0],\r\n                        isDataAvailable: true,\r\n                    });\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getbill\");\r\n            xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/getbill\");\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", billName);\r\n            xhr.send();\r\n        })\r\n    }\r\n\r\n    renderBillItemForm = () => {\r\n        return (\r\n            <div className=\"manageBill\">\r\n                <BillItemForm \r\n                    ref=\"itemForm\"\r\n                    splitChecked={this.splitChecked} \r\n                    splitEqually={this.splitEqually} \r\n                    setNameAndAmount={this.setNameAndAmount}\r\n\r\n                />\r\n                <form name=\"splitForm\" className=\"splitForm\">\r\n                    <div style={{textAlign: \"right\", marginBottom: \"15px\"}}>\r\n                    <Link to={`/billsplitter/editbill/${this.billName}`}><span className=\"text-icons\" style={{fontSize: 'small'}}>Add Person</span></Link>\r\n                        <span className=\"text-icons\" style={{fontSize: 'small'}} onClick={this.selectAllMembers}>Select All</span>\r\n                        <span className=\"text-icons\" style={{fontSize: 'small'}} onClick={this.resetSplitForm}>Reset</span>\r\n                    </div>\r\n                    {this.getSplitForm()}\r\n                </form>\r\n                <div className=\"memberWiseReceipt\" id=\"memberWiseReceipt\">\r\n                    {this.renderReceipt()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        this.getBill();\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                this.state.isSignedIn ? \r\n                    this.state.isBillExist ? \r\n                        this.state.isDataAvailable ?\r\n                            this.renderBillItemForm()\r\n                            : \r\n                            this.getLoadingScreen()\r\n                        :\r\n                        <Error404 message={\"The bill you are looking for does not exist.\"}/>\r\n                    :\r\n                    <GetUser setAppState={this.props.setAppState} />\r\n                }\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageBill\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class BillBrief extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showReceipt: false\r\n        }\r\n    }\r\n\r\n    toggleShowReceipt = () => {\r\n        const showReceipt = this.state.showReceipt;\r\n        this.setState({\r\n            showReceipt: !showReceipt\r\n        })\r\n    }\r\n\r\n    getMembers = (members)=>{\r\n        return (\r\n            members.map((member, i)=>{\r\n                return <span className=\"billMember\" key={i}>{member}</span>\r\n            })\r\n        )\r\n    }\r\n\r\n    renderItem = (name, amount, key) => {\r\n        return <tr key={key}>\r\n            <td>{name}</td>\r\n            <td>{amount.toFixed(2)}</td>\r\n        </tr>\r\n    }\r\n\r\n    renderReceiptItems = (itemList) => {\r\n        let itemListView = [];\r\n        // let key=0;\r\n        itemList.forEach((item,i)=>{\r\n            itemListView.push(this.renderItem(item.name, item.amount, i));\r\n        })\r\n        // for(let item in itemList){\r\n        //     itemListView.push(this.renderItem(item, itemList[item], key++));\r\n        // }\r\n        return itemListView;\r\n    }\r\n\r\n    getReceiptView = (name, memberReceipt, key) => {\r\n        const paidByMeTotal = memberReceipt.paidByMeTotal;\r\n        const paidForMeTotal = memberReceipt.paidForMeTotal;\r\n\r\n        return <div key={key}> \r\n        <div className=\"memberReceiptView\" >\r\n            {/* BRIEFS TABLE */}\r\n            <div> \r\n                <table><tbody>\r\n                    <tr>\r\n                        <td><ins><strong>{name}</strong></ins></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{fontSize: 'small'}}>paid</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{paidByMeTotal.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td  style={{fontSize: 'small'}}>owes</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{paidForMeTotal.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{fontSize: 'small'}}>total</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{(paidByMeTotal-paidForMeTotal).toFixed(2)}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {/* PAID BY ME TABLE */}\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{opacity: 0.5}}>paid</td>\r\n                    </tr>\r\n                    {this.renderReceiptItems(memberReceipt.paidByMe)}\r\n                </tbody></table>\r\n            </div>\r\n            \r\n            {/* OWES TABLE */}\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{opacity: 0.5}}>owes</td>\r\n                    </tr>\r\n                    {this.renderReceiptItems(memberReceipt.paidForMe)}\r\n                </tbody></table>\r\n            </div>\r\n        </div>\r\n        <div className=\"dueStatus\">\r\n            <i className=\"material-icons\" \r\n                style={{color: memberReceipt.isDue ? \"var(--white)\" : \"var(--green)\", fontSize: 'x-large'}}\r\n            >\r\n                {memberReceipt.isDue ? \"watch_later\" : \"done_all\"}\r\n            </i>\r\n        </div>\r\n        </div>\r\n    }\r\n\r\n    renderReceipt = () => {\r\n        let receipt = this.props.receipt;\r\n        // console.log(receipt);\r\n        let receiptView = [];\r\n        // let key = 0;\r\n        receipt.forEach((member, i)=>{\r\n            receiptView.push(this.getReceiptView(member.name, receipt[i], i));\r\n        })\r\n        // for(let member in receipt){\r\n        //     receiptView.push(this.getReceiptView(member, receipt[member] ,key++))\r\n        // }\r\n        return receiptView;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"detailedBill\">\r\n                <div className=\"billBrief\" id={this.props.id}>\r\n                    <div className=\"billBriefControls\">\r\n                        <i className=\"material-icons deleteIcon\" onClick={()=>{this.props.deleteBill(this.props.billName)}}>delete</i>\r\n                        <Link to={`/billsplitter/manage/${this.props.billName}`}><i className=\"material-icons editIcon\">edit</i></Link>\r\n                    </div>\r\n                    <div className=\"billBriefDetails\" onClick={this.toggleShowReceipt}>\r\n                        <div className=\"billDateAndName\">\r\n                            <div className=\"billName\">{this.props.billName.replace(\"-\", \" \")}</div>\r\n                            <div className=\"billDate\">{this.props.date}</div>\r\n                        </div>\r\n                        <div className=\"billMembers\">{this.getMembers(this.props.members)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"receiptView\" style={this.state.showReceipt ? {display: 'block'} : {display: 'none'}}>{this.renderReceipt()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BillBrief\r\n","import React, { Component } from 'react'\r\n\r\nexport class AlertMessage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"alertMessage\" id=\"alertMessage\" style={this.props.style}>\r\n                <h3>Are you sure you want to delete the bill <span style={{textTransform: 'capitalize'}}>{this.props.billName.replace('-',' ')}</span>?</h3>\r\n                \r\n                <span style={{float: \"right\", padding: \"5px 10px\"}} onClick={this.props.cancelDeletion}>Cancel</span>\r\n                <span style={{float: \"right\", padding: \"5px 10px\"}} onClick={()=>{this.props.confirmDeletion(this.props.billName)}}>OK</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlertMessage\r\n","import React, { Component } from 'react';\r\nimport BillBrief from './BillBrief';\r\nimport GetUser from './GetUser';\r\nimport AlertMessage from './AlertMessage';\r\n\r\nexport class AllBills extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.setTitle(\"All Bills\");\r\n        this.email = '';\r\n        this.state = {\r\n            allBills: [],\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isDataAvailable: false,\r\n            isAlertBoxRequired: false,\r\n            billToBeDeleted: ''\r\n        }\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    cancelDeletion = ()=>{\r\n        // console.log(\"deletion canceled.\");\r\n        this.setState({\r\n            isAlertBoxRequired: false,\r\n            billToBeDeleted: ''\r\n        })\r\n    }\r\n\r\n    confirmDeletion = (billName) => {\r\n        // console.log(\"deletion confirmed\");\r\n        this.setState({\r\n            isAlertBoxRequired: false,\r\n            billToBeDeleted: ''\r\n        });\r\n        // console.log(\"deleting\", billName);\r\n        document.getElementById(billName).style.opacity = 0.5;\r\n        document.getElementById(billName).style.pointerEvents = \"none\";\r\n        const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    document.getElementById(billName).style.opacity = 1;\r\n                    document.getElementById(billName).style.pointerEvents = \"auto\";\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const existingBillNames = response.existingBillNames;\r\n                    localStorage.setItem(\"existingBillNames\", JSON.stringify(existingBillNames));\r\n                    const allBills = this.state.allBills;\r\n                    let newAllBills = [];\r\n                    allBills.forEach(bill=>{\r\n                        if(bill.billName !== billName){\r\n                            newAllBills.push(bill);\r\n                        }\r\n                    })\r\n                    this.setState({\r\n                        allBills: newAllBills\r\n                    })\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/deletebill\");\r\n            xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/deletebill\");\r\n            xhr.setRequestHeader( \"Content-Type\", \"application/json\" );\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", billName);\r\n            xhr.send();\r\n    }\r\n\r\n\r\n    deleteBill = (billName) => {\r\n        this.setState({\r\n            isAlertBoxRequired: true,\r\n            billToBeDeleted: billName\r\n        });\r\n        \r\n    }\r\n    \r\n    getBillBrief = (bill, key) => {\r\n        return <BillBrief \r\n            key={key} \r\n            billName={bill.billName} \r\n            date={new Date(bill.dateCreated).toDateString()} \r\n            members={bill.members} \r\n            id={bill.billName} \r\n            deleteBill={this.deleteBill}\r\n            receipt={bill.receipt}\r\n        />\r\n    }\r\n\r\n    getAllBillBriefs = (allBills) => {\r\n        return allBills.map((bill, i)=>{\r\n            return this.getBillBrief(bill, i);\r\n        })\r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        this.getAllBills();\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n    \r\n    getAllBills = () => {\r\n        return new Promise((resolve, reject)=>{\r\n            const billNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const allBills = response.allBills;\r\n                    this.setState({\r\n                        allBills,\r\n                        isDataAvailable: true\r\n                    });\r\n                    resolve(true);\r\n                }\r\n            }\r\n            \r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getallbills\");\r\n            xhr.open(\"GET\", \"https://immense-coast-52535.herokuapp.com/api/v1/getallbills\");\r\n            xhr.setRequestHeader( \"Content-Type\", \"application/json\" );\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billnames\", JSON.stringify(billNames));\r\n                \r\n            xhr.send();\r\n\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <div id=\"allBillsContainer\" style={this.state.isAlertBoxRequired ? {pointerEvents: 'none', opacity: '0.5'} : {pointerEvents: 'auto', opacity: '1'}}>\r\n                    {this.state.isSignedIn ? \r\n                    this.state.isDataAvailable ? \r\n                        this.getAllBillBriefs(this.state.allBills)\r\n                        : \r\n                        this.getLoadingScreen() \r\n                    : \r\n                    <GetUser setAppState={this.props.setAppState}/>\r\n                    \r\n                }\r\n                </div>\r\n\r\n                <AlertMessage \r\n                    style={this.state.isAlertBoxRequired ? {display: 'block'} : {display: 'none'}} \r\n                    billName={this.state.billToBeDeleted}\r\n                    cancelDeletion={this.cancelDeletion}\r\n                    confirmDeletion={this.confirmDeletion}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllBills\r\n","import React, { Component } from 'react';\n// BrowserRouter as Router\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Titlebar from './components/Titlebar';\nimport AddIcon from './components/AddIcon';\nimport NewBillForm from './components/NewBillForm';\nimport EditBillForm from './components/EditBillForm';\nimport ManageBill from './components/ManageBill';\nimport GetUser from './components/GetUser';\nimport AllBills from './components/AllBills';\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = this.init();\n  }\n\n  init = () => {\n    let appState = {\n      title: 'Log in',\n      existingMembers: [],\n      allBillNames: [],\n      currentBill: {}\n    }\n    window.resizeTo(450, 450)\n    return appState;\n  }\n\n  setTitle = (title) => {\n    this.setState({\n      title: title\n    })\n  }\n\n  setAppState = (key, value) => {\n    this.setState({\n      [key]: value\n    });\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n        <Titlebar>{this.state.title}</Titlebar>\n        <Switch>\n          \n          {/* HOMEPAGE */}\n          <Route path=\"/billsplitter/home\">\n            <AddIcon></AddIcon>\n            <AllBills setTitle={this.setTitle} setAppState={this.setAppState}/>\n          </Route>\n\n          {/* CREATE NEW BILL */}\n          <Route path=\"/billsplitter/newbill\">\n            <NewBillForm \n              setTitle={this.setTitle} \n              existingMembers={this.state.existingMembers} \n              allBillNames={this.state.allBillNames}\n              email={this.state.email}\n              setAppState={this.setAppState}\n            />\n          </Route>\n\n          <Route path=\"/billsplitter/editbill/:id\">\n            <EditBillForm\n              setAppState={this.setAppState}\n            />\n          </Route>\n          \n          {/* MANAGE BILL */}\n          <Route path=\"/billsplitter/manage/:id\">\n            <ManageBill setTitle={this.setTitle} setAppState={this.setAppState} currentBill={this.state.currentBill} /> \n          </Route>\n            \n          {/* SIGN OR LOG IN */}\n          <Route path=\"/billsplitter/\">\n            <GetUser setAppState={this.setAppState} goto={\"/home\"}/>\n          </Route>\n          \n        </Switch>\n      </HashRouter>\n      \n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}