{"version":3,"sources":["components/Titlebar.js","components/AddIcon.js","components/NewNameChip.js","components/NewMembersForm.js","components/Notification.js","components/NewBillNameForm.js","components/GetUser.js","components/NewBillForm.js","components/error404.js","components/EditBillForm.js","components/BillItemForm.js","components/ManageBill.js","components/BillBrief.js","components/AlertMessage.js","components/AllBills.js","App.js","index.js"],"names":["Titlebar","logout","localStorage","setItem","document","getElementById","click","getLogoutButton","style","padding","onClick","className","to","id","fontSize","flexGrow","marginLeft","this","props","children","showLogoutButton","Component","AddIcon","NewNameChip","toggleIsMember","setState","isMember","state","toggleIsPart","index","isPart","isEditable","opacity","pointerEvents","memberName","color","NewMembersForm","value","handleChange","bind","handleSubmit","event","target","preventDefault","inputTag","borderBottom","addMember","onSubmit","type","placeholder","onChange","Notification","message","NewBillNameForm","a","async","isInEditMode","billName","replace","toLowerCase","allBillNames","includes","alreadyExists","setTimeout","isLoading","editBill","createNewBill","formatBillName","name","existingBillNames","display","GetUser","getSignedInStatus","getItem","email","componentDidMount","isSignedIn","googleSDK","setAppState","getUserFromDatabase","prepareLoginButton","auth2","attachClickHandler","refs","googleLoginBtn","googleUser","profile","getBasicProfile","getName","getEmail","error","alert","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","existingMembers","stringify","open","setRequestHeader","send","getStyle","position","top","bottom","left","right","flexDirection","justifyContent","alignItems","textAlign","getGoogleLoginButton","ref","src","alt","getLoadingScreen","window","load","init","client_id","cookiepolicy","scope","d","s","js","fjs","getElementsByTagName","createElement","parentNode","insertBefore","NewBillForm","members","isDataAvailable","getExistingMemberObjects","membersArray","length","map","member","toUpperCase","getMembersList","i","key","allMembers","push","billMembers","newMembers","forEach","currentBill","bill","concat","getExistingAssets","asset","renderForm","setTitle","Error404","EditBillForm","getBillName","location","href","split","errorMessage","isBillExist","BillItemForm","handleItemNameChange","itemName","handleItemAmountChange","itemAmount","getRowContainerStyles","marginTop","areInputsInvalid","isNameInvalid","isAmountInvalid","itemNameContainer","itemAmountContainer","amount","isNaN","parseFloat","getNameAndAmount","toFixed","itemDetails","setNameAndAmount","splitChecked","splitEqually","reset","step","width","ManageBill","getTitle","handleSplitAmountChange","memberState","getMembers","toggleIsChecked","marginRight","disabled","isChecked","toggleIsDue","updatedReceipt","receipt","memberIndex","indexOf","memberReceipt","isDue","isInvalid","total","getElementsByName","remaining","Math","abs","handleSplitFormSubmit","itemForm","splitInto","paidBy","generateReceipt","resetSplitForm","changePaidBy","getMemberNameChips","getSplitForm","colSpan","checkedCount","lessAmount","assignTo","parts","selectAllMembers","getSplitIntoMembers","renderItem","renderReceiptItems","itemList","itemListView","item","getReceiptView","paidByMeTotal","paidForMeTotal","paidByMe","paidForMe","renderReceipt","receiptView","splitAmount","getBill","renderBillItemForm","marginBottom","currentBillId","BillBrief","toggleShowReceipt","showReceipt","deleteBill","date","AlertMessage","textTransform","float","cancelDeletion","confirmDeletion","AllBills","isAlertBoxRequired","billToBeDeleted","allBills","newAllBills","getBillBrief","Date","dateCreated","toDateString","getAllBillBriefs","getAllBills","billNames","App","title","basename","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.3372ffb1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Titlebar extends Component {\r\n\r\n    logout = () => {\r\n        localStorage.setItem('isSignedIn', \"false\");\r\n        document.getElementById('linktologinpage').click();\r\n    }\r\n\r\n    getLogoutButton = () => {\r\n        return <div style={{padding: '7px'}} onClick={this.logout}>Logout</div>\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"titlebar\">\r\n                <Link to=\"/\" id=\"linktologinpage\"/>\r\n                <div><Link to=\"/home\"><i className=\"material-icons\">home</i></Link></div>\r\n                <div style={{fontSize: 'xx-large',flexGrow: 1, marginLeft: '10px'}}>{this.props.children}</div>\r\n                {this.props.showLogoutButton ? this.getLogoutButton() : ''}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Titlebar\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport class AddIcon extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"addnewIconContainer\">\r\n                <Link to=\"/newbill\"><i className=\"material-icons addnewIcon\">add_circle</i></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddIcon\r\n","import React, { Component } from 'react'\r\n\r\nexport class NewNameChip extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isMember: this.props.isPart\r\n        }\r\n    }\r\n    toggleIsMember = ()=>{\r\n        this.setState({\r\n            isMember: !this.state.isMember\r\n        })\r\n        this.props.toggleIsPart(this.props.index);\r\n    }\r\n    render() {\r\n        return (\r\n            <span \r\n            className=\"newNameChip\" \r\n            onClick={this.toggleIsMember} \r\n            style={this.state.isMember ? \r\n                this.props.isEditable ? \r\n                    {opacity: 1, pointerEvents: 'auto'} \r\n                : \r\n                    {opacity: 1, pointerEvents: 'none'}\r\n                :\r\n                {opacity: 0.5, pointerEvents: 'auto'}}\r\n            >\r\n                {this.props.memberName}\r\n                <i className=\"material-icons chipControlIcon\" style={this.state.isMember ? {color: 'var(--red)'} : {color: 'var(--green)'}}>\r\n                    {this.state.isMember ? 'cancel' : 'add_circle'}\r\n                </i>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewNameChip\r\n","import React, { Component } from 'react'\r\n\r\nexport class NewMembersForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {value: ''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    \r\n    handleSubmit(event) {\r\n        // console.log(\"handling event\");\r\n        event.preventDefault();\r\n        const inputTag = document.getElementById('newMemberName');\r\n        inputTag.style.borderBottom = '1px solid var(--white)';\r\n        if(this.state.value===''){\r\n            inputTag.style.borderBottom = '1px solid var(--red)';\r\n            return;\r\n        }\r\n        if(this.props.addMember(this.state.value)===-1) return;\r\n        this.setState({\r\n            value: ''\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form id=\"newMemberNames\" className=\"newMemberNames\" onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"member name\" className=\"appInputs\" style={{flexGrow: 1}} id=\"newMemberName\" value={this.state.value} onChange={this.handleChange} />\r\n                <i className=\"material-icons\" onClick={this.handleSubmit}>add_circle</i>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewMembersForm\r\n","import React, { Component } from 'react'\r\n\r\nexport class Notification extends Component {\r\n    render() {\r\n        return (\r\n            <span \r\n                className=\"notification\" \r\n                id=\"notification\" \r\n                style={this.props.style}\r\n            >\r\n                {this.props.message}\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Notification from './Notification';\r\n\r\nexport class NewBillNameForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.isInEditMode = this.props.isInEditMode;\r\n        this.allBillNames = this.props.existingBillNames;\r\n        this.state = {\r\n            value: this.isInEditMode ? this.props.billName : '',\r\n            alreadyExists: false,\r\n        }\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n    handleSubmit = async (event) => {\r\n        if(!this.isInEditMode){\r\n            const inputTag = document.getElementById('newBillName');\r\n            inputTag.style.borderBottom = '1px solid var(--white)';\r\n            if(this.state.value===''){\r\n                inputTag.style.borderBottom = '1px solid var(--red)';\r\n                // event.preventDefault();\r\n                return;\r\n            }\r\n            const billName = this.state.value.replace(' ', '-').toLowerCase();\r\n            if(this.allBillNames.includes(billName)){\r\n                this.setState({\r\n                    alreadyExists: true\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        alreadyExists: false\r\n                    })\r\n                },2000)\r\n                // event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n        const billName = this.state.value.replace(' ', '-').toLowerCase();\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        this.isInEditMode ? await this.props.editBill(billName) : await this.props.createNewBill(billName);\r\n        document.getElementById('nextpagelink').click();\r\n    }\r\n\r\n    formatBillName = (name) => {\r\n        return name.replace(\" \", \"-\");\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <div name=\"newBillName\" className=\"newBillName\">\r\n                    <Notification message={\"Bill with same exists\"} style={{display: this.state.alreadyExists ? 'block' : 'none'}} />\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"bill name\" \r\n                        className=\"appInputs\" \r\n                        id=\"newBillName\" \r\n                        value={this.state.value} \r\n                        onChange={this.handleChange} \r\n                        style={this.isInEditMode ? {pointerEvents: 'none', flexGrow: 1} : {pointerEvents: 'auto', flexGrow: 1}}\r\n                    />\r\n                    <i className=\"material-icons checkIcon\" onClick={this.handleSubmit}>check_circle</i>\r\n                    <Link to={`/manage/${this.formatBillName(this.state.value)}`} id=\"nextpagelink\"></Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewBillNameForm\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class GetUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.props.setAppState('showLogoutButton', false);\r\n        this.props.setAppState(\"title\", \"Login\");\r\n        this.email = ''\r\n        this.state={\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    componentDidMount = async () => {\r\n        if(!this.state.isSignedIn) {this.googleSDK()}\r\n        else{\r\n        const email=localStorage.getItem(\"email\");\r\n        const name=localStorage.getItem(\"name\");\r\n        this.props.setAppState('showLogoutButton', true);\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        await this.getUserFromDatabase(email, name);\r\n        this.setState({\r\n            isLoading: false\r\n        })\r\n\r\n        document.getElementById('linktohome').click();\r\n        }\r\n    }\r\n    \r\n    googleSDK() {\r\n        window['googleSDKLoaded'] = () => {\r\n          window['gapi'].load('auth2', () => {\r\n            this.auth2 = window['gapi'].auth2.init({\r\n              client_id: '748883507287-vd5sq0o1i30l6pk7vh4fuusi77voh1mp.apps.googleusercontent.com',\r\n              cookiepolicy: 'single_host_origin',\r\n              scope: 'profile email'\r\n            });\r\n            this.prepareLoginButton();\r\n          });\r\n        }\r\n       \r\n        (function(d, s, id){\r\n          var js, fjs = d.getElementsByTagName(s)[0];\r\n          if (d.getElementById(id)) {return;}\r\n          js = d.createElement(s); js.id = id;\r\n          js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\r\n          fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'google-jssdk'));\r\n       \r\n    }\r\n    \r\n    prepareLoginButton = () => {\r\n \r\n        // console.log(this.refs.googleLoginBtn);\r\n         \r\n        this.auth2.attachClickHandler(this.refs.googleLoginBtn, {},\r\n            async (googleUser) => {\r\n         \r\n            let profile = googleUser.getBasicProfile();\r\n            //YOUR CODE HERE\r\n            this.props.setAppState(\"isSignedIn\", true);\r\n            const name = profile.getName();\r\n            const email = profile.getEmail();\r\n            this.setState({\r\n                name,\r\n                email\r\n            })\r\n            localStorage.setItem(\"email\", email);\r\n            localStorage.setItem(\"name\", name);\r\n            localStorage.setItem(\"isSignedIn\", \"true\");\r\n            this.props.setAppState('showLogoutButton', true);\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            await this.getUserFromDatabase(email, name);\r\n            this.setState({\r\n                isLoading: false\r\n            })\r\n\r\n            document.getElementById('linktohome').click();\r\n         \r\n            }, (error) => {\r\n                // alert(JSON.stringify(error, undefined, 2));\r\n                alert(\"Some Error Occurred. Please try again\")\r\n            });\r\n         \r\n    }\r\n\r\n    getUserFromDatabase = (email, name) => {\r\n        return new Promise((resolve, reject)=>{\r\n            // MAKE API CALL HERE.\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    // console.log(xhr.responseText);\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const existingMembers = JSON.stringify(response.existingMembers);\r\n                    const existingBillNames = JSON.stringify(response.existingBillNames);\r\n                    localStorage.setItem(\"existingMembers\", existingMembers);\r\n                    localStorage.setItem(\"existingBillNames\", existingBillNames);\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getuser\");\r\n            xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/getuser\");\r\n            xhr.setRequestHeader(\"email\", email);\r\n            xhr.setRequestHeader(\"name\", name);\r\n            xhr.send();\r\n        });    \r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            position: 'fixed',\r\n            top: '0px',\r\n            bottom: '0px',\r\n            left: '0px',\r\n            right: '0px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center'\r\n        }\r\n    }\r\n\r\n    getGoogleLoginButton = () => {\r\n        return (\r\n            <div style={this.getStyle()}>\r\n                <h2>You must be logged in to use this website.</h2>\r\n                \r\n                <div className=\"google-btn\" ref=\"googleLoginBtn\">\r\n                    <div className=\"google-icon-wrapper\">\r\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"G\"/>\r\n                    </div>\r\n                    <p className=\"btn-text\"><b>Sign in with google</b></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/home\" id=\"linktohome\"></Link>\r\n                <div style={this.state.isLoading ? {opacity: 0.5, pointerEvents: 'none'}: {opacity: 1, pointerEvents: 'auto'}}>\r\n                    {\r\n                        this.state.isSignedIn ? \r\n                            ''\r\n                            :\r\n                            this.getGoogleLoginButton()\r\n                    }\r\n                </div>\r\n            \r\n                {this.state.isLoading ? this.getLoadingScreen() : ''}\r\n            \r\n            </div>\r\n\r\n\r\n\r\n\r\n            // <div className=\"row mt-5\">  \r\n            // <Link to=\"/home\" id=\"linktohome\"></Link>\r\n            //     <div className=\"col-md-12\">\r\n            //         <h2 className=\"text-left\">Google Login Demo</h2>\r\n            //         <div className=\"card mt-3\">\r\n            //             <div className=\"card-body\">\r\n                             \r\n            //                 <div className=\"row mt-5 mb-5\">\r\n            //                     <div className=\"col-md-4 mt-2 m-auto \">\r\n            //                         <button className=\"loginBtn loginBtn--google\" ref=\"googleLoginBtn\">\r\n            //                             Login with Google\r\n            //                         </button>\r\n            //                     </div>    \r\n            //                 </div>\r\n            //             <div>\r\n            //                 <div>\r\n            //                     <span>Name: </span>\r\n            //                     <span>{this.state.name}</span>\r\n            //                 </div>\r\n            //                 <div>\r\n            //                     <span>Email: </span>\r\n            //                     <span>{this.state.email}</span>\r\n            //                 </div>\r\n            //                 <div>\r\n            //                     <span>Version: </span>\r\n            //                     <span>2</span>\r\n            //                 </div>\r\n            //             </div> \r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            //     {this.state.isLoading ? this.getLoadingScreen() : ''}\r\n            // </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GetUser\r\n","import React, { Component } from 'react';\r\nimport NewNameChip from './NewNameChip';\r\nimport NewMembersForm from './NewMembersForm';\r\nimport NewBillNameForm from './NewBillNameForm';\r\nimport Notification from './Notification';\r\n// import { Link } from 'react-router-dom';\r\nimport GetUser from './GetUser';\r\n\r\nexport class NewBillForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props.setTitle(\"New Bill\");\r\n        this.email = \"\";\r\n        this.existingMembers = [];\r\n        this.existingBillNames = [];\r\n        this.state = this.init();\r\n    }\r\n\r\n    init = ()=>{\r\n        return {\r\n            members: [],\r\n            alreadyExists: false,\r\n            isDataAvailable: false,\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isLoading: false,\r\n        };\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            this.existingBillNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    getExistingMemberObjects = (existingMembers) => {\r\n        let membersArray = [];\r\n        if(existingMembers.length!==0){\r\n                membersArray = existingMembers.map(member=> {\r\n                if(member.toUpperCase()===\"ME\") return {name: member, isPart: true}\r\n                return {name: member, isPart: false}\r\n            })\r\n        }\r\n        return membersArray;\r\n    }\r\n\r\n    getMembersList = (members) =>{\r\n        return members.map(\r\n            (member, i)=> \r\n                <NewNameChip \r\n                    memberName={member.name} \r\n                    isPart={member.isPart} \r\n                    isEditable={true}\r\n                    key={i} \r\n                    index={i} \r\n                    toggleIsPart={this.toggleIsPart}\r\n                />\r\n        )\r\n    }\r\n    \r\n    addMember = (name) =>{\r\n        const allMembers = this.state.members;\r\n        for(let i=0;i<allMembers.length;i++){\r\n            if(allMembers[i].name.toUpperCase()===name.toUpperCase()){\r\n                this.setState({\r\n                    alreadyExists: true\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        alreadyExists: false\r\n                    })\r\n                },2000)\r\n                return -1;\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            member: this.state.members.push({name, isPart: true}),\r\n            alreadyExists: false\r\n        });\r\n        return 0;\r\n    }\r\n\r\n    toggleIsPart = (key) => {\r\n        const allMembers = this.state.members;\r\n        allMembers[key].isPart = !allMembers[key].isPart;\r\n        this.setState({\r\n            members: allMembers\r\n        })\r\n        // console.log(this.state);\r\n    }\r\n\r\n    createNewBill = (billName)=>{\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        return new Promise((resolve, reject)=> {\r\n            let billMembers = [];\r\n            let newMembers = [];\r\n            const existingMembers = this.existingMembers;\r\n            this.state.members.forEach(member=>{\r\n                if(member.isPart) {\r\n                    billMembers.push(member.name);\r\n                    if(existingMembers.includes(member.name)===false){\r\n                        newMembers.push(member.name);\r\n                    }\r\n                }\r\n            })\r\n\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    this.setState({\r\n                        isLoading: false\r\n                    })\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const currentBill = response.bill;\r\n                    // this.props.setAppState(\"currentBill\", currentBill.billName);\r\n                    const existingBillNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n                    let existingMembers = JSON.parse(localStorage.getItem(\"existingMembers\"));\r\n                    existingMembers = existingMembers.concat(newMembers);\r\n                    existingBillNames.push(currentBill.billName);\r\n                    localStorage.setItem(\"existingMembers\", JSON.stringify(existingMembers));\r\n                    localStorage.setItem(\"existingBillNames\", JSON.stringify(existingBillNames));\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/createbill\");\r\n            xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/createbill\");\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", billName);\r\n            xhr.setRequestHeader(\"members\", JSON.stringify(billMembers));\r\n            xhr.setRequestHeader(\"newmembers\", JSON.stringify(newMembers));\r\n            xhr.send();\r\n        });\r\n        \r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        if(!this.state.isLoading){\r\n            this.getExistingAssets();\r\n        }\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n\r\n    getExistingAssets = () => {\r\n        return new Promise((resolve, reject)=>{\r\n        \r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const asset = response.asset;\r\n                    const existingBillNames = asset.existingBillNames;\r\n                    this.existingMembers = asset.existingMembers;\r\n                    const members = this.getExistingMemberObjects(asset.existingMembers);\r\n                    this.setState({\r\n                        existingBillNames,\r\n                        members,\r\n                        isDataAvailable: true\r\n                    });\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getexisitingassets\");\r\n            xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/getexisitingassets\");\r\n            xhr.setRequestHeader(\"email\", localStorage.getItem(\"email\"));\r\n            xhr.send();\r\n        })\r\n    }\r\n    \r\n    \r\n    renderForm = () => {\r\n        return (\r\n        <div className=\"newBillForm\" style={this.state.isLoading ? {opacity: 0.5, pointerEvents: 'none'} : {opacity: 1, pointerEvents: 'auto'} }>\r\n            <Notification message={\"Select From list\"} style={{display: this.state.alreadyExists ? 'block' : 'none'}} />\r\n            <NewMembersForm addMember={this.addMember} />\r\n            <NewBillNameForm \r\n                createNewBill={this.createNewBill} \r\n                setTitle={this.props.setTitle} \r\n                existingBillNames={this.existingBillNames}\r\n                isInEditMode={false}\r\n            />\r\n            <div className=\"newMembers\">\r\n                {this.getMembersList(this.state.members)}\r\n            </div>\r\n        \r\n        </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n            \r\n            {this.state.isSignedIn ? \r\n                this.state.isDataAvailable ? \r\n                    this.renderForm() : this.getLoadingScreen() \r\n                : \r\n                <GetUser setAppState={this.props.setAppState} />\r\n            }\r\n            \r\n            {this.state.isLoading ? this.getLoadingScreen() : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewBillForm\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class Error404 extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"error404Container\">\r\n                <span className=\"errorCode\" style={{fontSize: '70px'}}>404</span>\r\n                <span>Page not found</span>\r\n                <span>{this.props.message}</span>\r\n                <span>Go to:</span>\r\n                <Link to=\"/home\"><i className=\"material-icons\">home</i></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Error404\r\n","import React, { Component } from 'react';\r\nimport NewNameChip from './NewNameChip';\r\nimport NewMembersForm from './NewMembersForm';\r\nimport NewBillNameForm from './NewBillNameForm';\r\nimport Notification from './Notification';\r\n// import { Link } from 'react-router-dom';\r\nimport GetUser from './GetUser';\r\nimport Error404 from './error404';\r\n\r\nexport class EditBillForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props.setAppState(\"title\",\"Edit Bill\");\r\n        this.email = \"\";\r\n        this.billName = \"\";\r\n        this.existingMembers = [];\r\n        this.state = {\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isBillExist: true,\r\n            isDataAvailable: false,\r\n            members: [],\r\n            alreadyExists: false,\r\n            errorMessage: '',\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n    // init = ()=>{\r\n    //     setTimeout(()=>{console.log(this.state);},5000);\r\n    //     return {\r\n    //         isSignedIn: this.getSignedInStatus(),\r\n    //         members: [],\r\n    //         alreadyExists: false,\r\n    //         isDataAvailable: false,\r\n    //     };\r\n    // }\r\n\r\n    getBillName = () => {\r\n        const pathname = document.location.href;\r\n        let billName = pathname.split(\"/\");\r\n        billName = billName[billName.length-1];\r\n        const existingBillNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n        if(existingBillNames.includes(billName)){\r\n            return billName;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            this.billName = this.getBillName();\r\n            this.existingMembers = JSON.parse(localStorage.getItem(\"existingMembers\"));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    \r\n    getExistingMemberObjects = (billMembers,existingMembers) => {\r\n        let membersArray = [];\r\n        if(existingMembers.length!==0){\r\n                membersArray = existingMembers.map(member=> {\r\n                if(billMembers.includes(member)) return {name: member, isPart: true, isEditable: false}\r\n                return {name: member, isPart: false, isEditable: true}\r\n            })\r\n        }\r\n        return membersArray;\r\n    }\r\n\r\n    getMembersList = (members) =>{\r\n        return members.map(\r\n            (member, i)=> \r\n                <NewNameChip \r\n                    memberName={member.name} \r\n                    isPart={member.isPart} \r\n                    isEditable={member.isEditable}\r\n                    key={i} \r\n                    index={i} \r\n                    toggleIsPart={this.toggleIsPart}\r\n                />\r\n        )\r\n    }\r\n    \r\n    addMember = (name) =>{\r\n        const allMembers = this.state.members;\r\n        for(let i=0;i<allMembers.length;i++){\r\n            if(allMembers[i].name.toUpperCase()===name.toUpperCase()){\r\n                this.setState({\r\n                    alreadyExists: true\r\n                })\r\n                setTimeout(()=>{\r\n                    this.setState({\r\n                        alreadyExists: false\r\n                    })\r\n                },2000)\r\n                return -1;\r\n            };\r\n        }\r\n\r\n        this.setState({\r\n            member: this.state.members.push({name, isPart: true, isEditable: true}),\r\n            alreadyExists: false\r\n        });\r\n        return 0;\r\n    }\r\n\r\n    toggleIsPart = (key) => {\r\n        const allMembers = this.state.members;\r\n        allMembers[key].isPart = !allMembers[key].isPart;\r\n        this.setState({\r\n            members: allMembers\r\n        })\r\n        // console.log(this.state);\r\n    }\r\n\r\n    editBill = (billName)=>{\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        return new Promise((resolve, reject)=> {\r\n            let billMembers = [];\r\n            let newMembers = [];\r\n            const existingMembers = this.existingMembers;\r\n            this.state.members.forEach(member=>{\r\n                if(member.isPart) {\r\n                    billMembers.push(member.name);\r\n                    if(existingMembers.includes(member.name)===false){\r\n                        newMembers.push(member.name);\r\n                    }\r\n                }\r\n            })\r\n\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    this.setState({\r\n                        isLoading: false\r\n                    })\r\n                    // const response = JSON.parse(xhr.responseText);\r\n                    // const currentBill = response.bill;\r\n                    let existingMembers = JSON.parse(localStorage.getItem(\"existingMembers\"));\r\n                    existingMembers = existingMembers.concat(newMembers);\r\n                    localStorage.setItem(\"existingMembers\", JSON.stringify(existingMembers));\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/addmembertobill\");\r\n            xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/addmembertobill\");\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", billName);\r\n            xhr.setRequestHeader(\"members\", JSON.stringify(billMembers));\r\n            xhr.setRequestHeader(\"newmembers\", JSON.stringify(newMembers));\r\n            xhr.send();\r\n        });\r\n        \r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        if(!this.state.isLoading){\r\n            this.getExistingAssets();\r\n        }\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n\r\n    getExistingAssets = () => {\r\n        return new Promise((resolve, reject)=>{\r\n        \r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    // console.log(response)\r\n                    const billMembers = response.members;\r\n                    const members = this.getExistingMemberObjects(billMembers, this.existingMembers);\r\n                    this.setState({\r\n                        members,\r\n                        isDataAvailable: true,\r\n                    });\r\n                    resolve(true);\r\n                }else if(xhr.readyState===4 && xhr.status===404){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const errorMessage = response.message;\r\n                    this.setState({\r\n                        isBillExist: false,\r\n                        errorMessage\r\n                    })\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getbillmembers\");\r\n            xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/getbillmembers\");\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", this.billName);\r\n            xhr.send();\r\n        })\r\n    }\r\n    \r\n    \r\n    renderForm = () => {\r\n        return (\r\n        <div className=\"newBillForm\" style={this.state.isLoading ? {opacity: 0.5, pointerEvents: 'none'}:{opacity: 1, pointerEvents: 'auto'} }>\r\n            <Notification message={\"Select From list\"} style={{display: this.state.alreadyExists ? 'block' : 'none'}} />\r\n            <NewMembersForm addMember={this.addMember} />\r\n            <NewBillNameForm \r\n                setTitle={this.props.setTitle} \r\n                existingBillNames={this.existingBillNames}\r\n                isInEditMode={true}\r\n                billName={this.billName}\r\n                editBill={this.editBill}\r\n            />\r\n            <div className=\"newMembers\">\r\n                {this.getMembersList(this.state.members)}\r\n            </div>\r\n        \r\n        </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n            \r\n            {this.state.isSignedIn ?\r\n                this.state.isBillExist ?  \r\n                    this.state.isDataAvailable ? \r\n                        this.renderForm() : this.getLoadingScreen() \r\n                :\r\n                <Error404 message={this.state.errorMessage}/>\r\n            : \r\n            <GetUser setAppState={this.props.setAppState} />\r\n            }\r\n            \r\n            {this.state.isLoading ? this.getLoadingScreen() : ''}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditBillForm\r\n","import React, { Component } from 'react'\r\n\r\nexport class BillItemForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            itemName: '',\r\n            itemAmount: ''\r\n        }\r\n    }\r\n    \r\n    handleItemNameChange = (event) => {\r\n\r\n        this.setState({\r\n            itemName: event.target.value\r\n        });\r\n\r\n        // console.log(this.state.itemName);\r\n    }\r\n    \r\n    handleItemAmountChange = (event) => {\r\n        this.setState({\r\n            itemAmount: event.target.value\r\n        })\r\n        // console.log(this.state.itemAmount);\r\n    }\r\n\r\n    getRowContainerStyles = () => {\r\n        return {\r\n            display: 'flex', \r\n            flexDirection: 'row', \r\n            marginTop: '5px', \r\n            justifyContent: 'space-between',\r\n            alignItems: 'center'\r\n        }\r\n    }\r\n\r\n    areInputsInvalid = () => {\r\n        let isNameInvalid=false, isAmountInvalid=false;\r\n        const itemNameContainer = document.getElementById('itemName');\r\n        const itemAmountContainer = document.getElementById('itemAmount');\r\n        const name = this.state.itemName;\r\n        const amount = this.state.itemAmount;\r\n\r\n        itemNameContainer.style.borderBottom = '1px solid var(--white)'\r\n        itemAmountContainer.style.borderBottom = '1px solid var(--white)'\r\n        if(name===''){\r\n            itemNameContainer.style.borderBottom = '1px solid var(--red)';\r\n            isNameInvalid=true;\r\n        }\r\n        if(isNaN(parseFloat(amount))){\r\n            itemAmountContainer.style.borderBottom = '1px solid var(--red)';\r\n            isAmountInvalid=true;\r\n        }\r\n        if(isNameInvalid || isAmountInvalid){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getNameAndAmount = ()=>{\r\n        return [this.state.itemName, parseFloat(parseFloat(this.state.itemAmount).toFixed(2))]\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(this.areInputsInvalid()) return;\r\n        // console.log(\"Valid Inputs:\", this.state.itemAmount, this.state.itemName);\r\n\r\n\r\n        // INPUTS ARE VALID\r\n        const itemDetails = this.getNameAndAmount();\r\n        const name = itemDetails[0];\r\n        const amount = itemDetails[1];\r\n        this.props.setNameAndAmount(name, amount);\r\n        if(event.target.id==='split') this.props.splitChecked(name, amount);\r\n        else this.props.splitEqually(name, amount);\r\n        \r\n        \r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            itemName: '',\r\n            itemAmount: ''\r\n            \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <form name=\"billItemForm\" className=\"billItemForm\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" placeholder=\"item name\" id=\"itemName\" className=\"appInputs\" value={this.state.itemName} onChange={this.handleItemNameChange}/>\r\n                    <div style={this.getRowContainerStyles()}>\r\n                        <input \r\n                            type=\"number\"\r\n                            step=\"any\" \r\n                            placeholder=\"0.00\" \r\n                            id=\"itemAmount\" \r\n                            className=\"appInputs\" \r\n                            style={{width: \"55%\"}} \r\n                            value={this.state.itemAmount} \r\n                            onChange={this.handleItemAmountChange}\r\n                        />\r\n                        <div>\r\n                            <span className=\"text-icons\" id=\"split\" onClick={this.handleSubmit}>Split</span>\r\n                            <span className=\"text-icons\" id=\"splitequal\" onClick={this.handleSubmit}>Split=</span>\r\n                        </div>\r\n                    </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BillItemForm\r\n","import React, { Component } from 'react'\r\nimport BillItemForm from './BillItemForm'\r\nimport GetUser from './GetUser';\r\nimport { Link } from 'react-router-dom';\r\nimport Error404 from './error404';\r\n\r\nexport class ManageBill extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.billName = \"\";\r\n        this.email = \"\";\r\n        this.members = [];\r\n        this.currentBillId = '';\r\n        // this.state = this.initState();\r\n        this.state = {\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isBillExist: this.billName === \"\" ? false : true,\r\n            isDataAvailable: false,\r\n            billName: this.billName,\r\n            itemName: '', \r\n            itemAmount: 0.00,\r\n            total: 0.00, \r\n            remaining: 0.00, \r\n            receipt: [], \r\n            paidBy: ''\r\n        }\r\n        \r\n    }\r\n\r\n    getTitle = (billName) => {\r\n        return billName.replace(\"-\", \" \");\r\n    }\r\n\r\n    getBillName = () => {\r\n        const pathname = document.location.href;\r\n        let billName = pathname.split(\"/\");\r\n        billName = billName[billName.length-1];\r\n        const existingBillNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n        if(existingBillNames.includes(billName)){\r\n            return billName;\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            this.billName = this.getBillName();\r\n            this.props.setAppState(\"title\",this.getTitle(this.billName));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    handleSplitAmountChange = (event)=>{\r\n        const member = event.target.name;\r\n        const memberState = this.state[`${member}`];\r\n        memberState.amount = event.target.value;\r\n        this.setState({\r\n            [member]: memberState\r\n        })\r\n    }\r\n\r\n    \r\n    getMembers = (members) => {\r\n        return (\r\n            members.map((member, i)=>{\r\n                const memberState = this.state[`${member}`];\r\n                return <tr key={i}>\r\n                    <td width=\"70%\" onClick={()=>{this.toggleIsChecked(member,i)}}>\r\n                        {member}\r\n                    </td>\r\n                    <td style={{textAlign: \"right\", marginRight: '5px'}}>\r\n                        <input \r\n                        type=\"number\" \r\n                        step=\"any\"\r\n                        className=\"appInputs\" \r\n                        onChange={this.handleSplitAmountChange} \r\n                        value={memberState.amount} \r\n                        style={{width: \"70px\"}} \r\n                        name={`${member}`} \r\n                        id={`${i}-splitAmount`}\r\n                        placeholder=\"0.00\"\r\n                        disabled = {memberState.isChecked ? \"\" : \"disabled\"} \r\n                        />\r\n                    </td>\r\n                    <td>\r\n                        <i className=\"material-icons\" style={{fontSize: 'x-large'}} onClick={()=>{this.toggleIsChecked(member,i)}}>\r\n                            {memberState.isChecked ? 'check_circle_outline' : 'radio_button_unchecked'}\r\n                        </i>\r\n                    </td>\r\n                </tr>\r\n            })\r\n        )\r\n    }\r\n\r\n    toggleIsChecked = (member) => {\r\n        const memberState = this.state[`${member}`];\r\n        memberState.isChecked = !memberState.isChecked;\r\n        this.setState({\r\n            [member]: memberState\r\n        });\r\n    }\r\n\r\n    toggleIsDue = (member) => {\r\n        document.getElementById('memberWiseReceipt').style.opacity = 0.5;\r\n        document.getElementById('memberWiseReceipt').style.pointerEvents = \"none\";\r\n        let updatedReceipt = this.state.receipt;\r\n        const memberIndex = this.members.indexOf(member);\r\n        const memberReceipt = this.state.receipt[memberIndex];\r\n        memberReceipt.isDue = !memberReceipt.isDue;\r\n        updatedReceipt[memberIndex]=memberReceipt;\r\n        \r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState===4 && xhr.status===200){ \r\n            document.getElementById('memberWiseReceipt').style.opacity = 1;\r\n            document.getElementById('memberWiseReceipt').style.pointerEvents = \"auto\";\r\n                this.setState({\r\n                    receipt: updatedReceipt\r\n                });\r\n            }\r\n        }\r\n        // xhr.open(\"GET\", \"http://localhost:3090/api/v1/updatereceipt\");\r\n        xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/updatereceipt\");\r\n        xhr.setRequestHeader(\"email\", this.email);\r\n        xhr.setRequestHeader(\"billname\", this.billName);\r\n        xhr.setRequestHeader(\"receipt\", JSON.stringify(updatedReceipt));\r\n        xhr.send();\r\n\r\n        // CALL API\r\n    }\r\n\r\n    areInputsInvalid = (itemAmount) => {\r\n        var isInvalid = false;\r\n        let total=0;\r\n        this.members.forEach((member) => {\r\n            document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--white)';\r\n            let memberState = this.state[`${member}`];\r\n            if(memberState.isChecked){\r\n                if(isNaN(parseFloat(memberState.amount))){\r\n                    isInvalid = true;\r\n                    document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--red)'\r\n                }else{\r\n                    total+=parseFloat(memberState.amount);\r\n                }\r\n            }\r\n        })\r\n        total = parseFloat(total.toFixed(2));\r\n        if(isInvalid) return true;\r\n        \r\n        this.setState({\r\n            total: total,\r\n            remaining: (itemAmount-total).toFixed(2)\r\n        })\r\n\r\n        if(Math.abs(itemAmount-total)>1) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    handleSplitFormSubmit = (event)=> {\r\n        event.preventDefault();\r\n        document.getElementById('memberWiseReceipt').style.opacity = 0.5;\r\n        document.getElementById('memberWiseReceipt').style.pointerEvents = \"none\";\r\n        if(this.refs.itemForm.areInputsInvalid()) return;\r\n        const itemDetails = this.refs.itemForm.getNameAndAmount();\r\n        this.setNameAndAmount(itemDetails[0], itemDetails[1]);\r\n        if(this.areInputsInvalid(itemDetails[1])) return;\r\n\r\n        // GENERATE ITEM BILL OBJECT\r\n        let splitInto = [];\r\n        this.members.forEach(member=>{\r\n            const memberState = this.state[`${member}`];\r\n            if(memberState.isChecked){\r\n                // splitInto.push({[member]: parseFloat(memberState.amount)})   \r\n                splitInto.push({name: member, amount: parseFloat(memberState.amount)})\r\n            }\r\n        })\r\n        let bill = {\r\n            itemName: this.state.itemName, \r\n            paidBy: this.state.paidBy, \r\n            itemAmount: parseFloat(this.state.itemAmount), \r\n            splitInto: splitInto\r\n        };\r\n        const receipt = this.generateReceipt(bill);\r\n\r\n        // console.log(\"Calling the api\");\r\n        // MAKE API CALL TO UPDATE RECEIPT\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState===4 && xhr.status===200){\r\n                \r\n            document.getElementById('memberWiseReceipt').style.opacity = 1;\r\n            document.getElementById('memberWiseReceipt').style.pointerEvents = \"auto\";\r\n                this.setState({\r\n                    receipt: receipt\r\n                });\r\n            }\r\n        }\r\n        // xhr.open(\"GET\", \"http://localhost:3090/api/v1/updatereceipt\");\r\n        xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/updatereceipt\");\r\n        xhr.setRequestHeader(\"email\", this.email);\r\n        xhr.setRequestHeader(\"billname\", this.billName);\r\n        xhr.setRequestHeader(\"receipt\", JSON.stringify(receipt));\r\n        xhr.send();\r\n\r\n        // RESET FORMS\r\n        this.resetSplitForm();\r\n        this.refs.itemForm.reset();\r\n    }\r\n\r\n    changePaidBy = (event) => {\r\n        this.setState({\r\n            paidBy: event.target.id\r\n        })\r\n    }\r\n\r\n    getMemberNameChips = () => {\r\n        return this.members.map((member, i)=>{\r\n            return <span \r\n                key={i} \r\n                className=\"nameChip\"\r\n                id={member}\r\n                onClick={this.changePaidBy} \r\n                style={{opacity: this.state.paidBy===member ? 1 : 0.3}}\r\n                >\r\n                    {member}\r\n                </span>\r\n        })\r\n    }\r\n\r\n    getSplitForm = ()=> {\r\n        return <table style={{width: \"100%\"}} className=\"splitAmounts\">\r\n        <tbody>\r\n        {this.getMembers(this.members)}\r\n        <tr>\r\n            <td width=\"70%\" style={{textAlign: \"right\", fontSize: \"medium\"}}>Total: </td>\r\n            <td colSpan=\"2\">{this.state.total.toFixed(2)}</td>\r\n        </tr>\r\n        <tr style={{color: Math.abs(this.state.remaining) > 1 ? 'var(--red)' : 'var(--white)'}}>\r\n            <td width=\"70%\" style={{textAlign: \"right\", fontSize: \"medium\"  }}>Remaining: </td>\r\n            <td colSpan=\"2\">{this.state.remaining}</td>\r\n        </tr>\r\n        <tr>\r\n            <td colSpan=\"3\">Paid By:</td>\r\n        </tr>\r\n        <tr>\r\n            <td className=\"nameChipContainer\">\r\n                {this.getMemberNameChips()}\r\n            </td>\r\n            <td colSpan=\"2\" style={{textAlign: \"right\"}}>\r\n                <i className=\"material-icons\" onClick={this.handleSplitFormSubmit}>add_circle</i>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n        </table>\r\n    }\r\n\r\n    setNameAndAmount = (name, amount) => {\r\n        this.setState({\r\n            itemName: name,\r\n            itemAmount: amount\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    splitChecked = (name, amount) => {\r\n        let checkedCount=0;\r\n        let lessAmount=0;\r\n        let assignTo = [];\r\n        let isInvalid = false;\r\n        this.members.forEach(member => {\r\n            \r\n            document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--white)';\r\n            let memberState = this.state[`${member}`];\r\n            if(memberState.isChecked){\r\n                \r\n                if(memberState.amount===''){\r\n                    ++checkedCount;\r\n                    assignTo.push(member);\r\n                }\r\n                else if(isNaN(memberState.amount)){\r\n                    isInvalid=true;\r\n                    document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--red)';\r\n                }\r\n                else{\r\n                    lessAmount+=memberState.amount;    \r\n                }\r\n            }\r\n        })\r\n        if(isInvalid) return;\r\n\r\n        amount=amount-lessAmount;\r\n        const parts = parseFloat((amount/checkedCount).toFixed(2));\r\n        assignTo.forEach(member=>{\r\n            let memberState = this.state[`${member}`];\r\n            memberState.amount = parts;\r\n            this.setState({\r\n                [member]: memberState\r\n            })\r\n        })\r\n        \r\n    }\r\n\r\n    splitEqually = (name, amount) => {\r\n        let assignTo = [];\r\n        this.members.forEach(member => {\r\n            document.getElementsByName(member)[0].style.borderBottom = '1px solid var(--white)';\r\n            let memberState = this.state[`${member}`];\r\n            if(memberState.isChecked){\r\n                assignTo.push(member);\r\n            }\r\n        })\r\n\r\n        const parts = parseFloat((amount/assignTo.length).toFixed(2));\r\n        // console.log(typeof parts);\r\n        assignTo.forEach(member=>{\r\n            let memberState = this.state[`${member}`];\r\n            memberState.amount = parts;\r\n            this.setState({\r\n                [member]: memberState\r\n            })\r\n        })\r\n    }\r\n\r\n    resetSplitForm = () => {\r\n        this.members.forEach(member=>{\r\n            const memberState = this.state[`${member}`];\r\n            memberState.amount = '';\r\n            this.setState({\r\n                [member]: memberState\r\n            })\r\n        })\r\n    }\r\n\r\n    selectAllMembers = () => {\r\n        this.members.forEach(member=>{\r\n            const memberState = this.state[`${member}`];\r\n            memberState.isChecked = true;\r\n            this.setState({\r\n                [member]: memberState\r\n            })\r\n        })\r\n    }\r\n\r\n    getSplitIntoMembers = (splitInto) => {\r\n        return splitInto.map((member, i)=>{\r\n            const name = member.name;\r\n            const amount = member.amount;\r\n            return <tr key={i}>\r\n                <td>{name}</td>\r\n                <td style={{textAlign: \"right\"}}>{amount.toFixed(2)}</td>\r\n            </tr>\r\n        })\r\n    }\r\n\r\n    renderItem = (name, amount, key) => {\r\n        return <tr key={key}>\r\n            <td>{name}</td>\r\n            <td>{amount.toFixed(2)}</td>\r\n        </tr>\r\n    }\r\n\r\n    renderReceiptItems = (itemList) => {\r\n        let itemListView = [];\r\n        // let key=0;\r\n        itemList.forEach((item,i)=>{\r\n            itemListView.push(this.renderItem(item.name, item.amount, i));\r\n        })\r\n        // for(let item in itemList){\r\n        //     itemListView.push(this.renderItem(item, itemList[item], key++));\r\n        // }\r\n        return itemListView;\r\n    }\r\n\r\n    getReceiptView = (name, memberReceipt, key) => {\r\n        const paidByMeTotal = memberReceipt.paidByMeTotal;\r\n        const paidForMeTotal = memberReceipt.paidForMeTotal;\r\n\r\n        return <div key={key}> \r\n        <div className=\"memberReceiptView\" >\r\n            {/* BRIEFS TABLE */}\r\n            <div> \r\n                <table><tbody>\r\n                    <tr>\r\n                        <td><ins><strong>{name}</strong></ins></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{fontSize: 'small'}}>paid</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{paidByMeTotal.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td  style={{fontSize: 'small'}}>owes</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{paidForMeTotal.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{fontSize: 'small'}}>total</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{(paidByMeTotal-paidForMeTotal).toFixed(2)}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {/* PAID BY ME TABLE */}\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{opacity: 0.5}}>paid</td>\r\n                    </tr>\r\n                    {this.renderReceiptItems(memberReceipt.paidByMe)}\r\n                </tbody></table>\r\n            </div>\r\n            \r\n            {/* OWES TABLE */}\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{opacity: 0.5}}>owes</td>\r\n                    </tr>\r\n                    {this.renderReceiptItems(memberReceipt.paidForMe)}\r\n                </tbody></table>\r\n            </div>\r\n        </div>\r\n        <div className=\"dueStatus\">\r\n            <i className=\"material-icons\" \r\n                onClick={()=>{this.toggleIsDue(name)}}\r\n                style={{color: memberReceipt.isDue ? \"var(--white)\" : \"var(--green)\", fontSize: 'x-large'}}\r\n            >\r\n                {memberReceipt.isDue ? \"watch_later\" : \"done_all\"}\r\n            </i>\r\n        </div>\r\n        </div>\r\n    }\r\n\r\n\r\n    renderReceipt = () => {\r\n        let receipt = this.state.receipt;\r\n        // console.log(receipt);\r\n        let receiptView = [];\r\n        // let key = 0;\r\n        receipt.forEach((member, i)=>{\r\n            receiptView.push(this.getReceiptView(member.name, receipt[i], i));\r\n        })\r\n        // for(let member in receipt){\r\n        //     receiptView.push(this.getReceiptView(member, receipt[member] ,key++))\r\n        // }\r\n        return receiptView;\r\n    }\r\n\r\n    generateReceipt = (bill) => {\r\n        let receipt = this.state.receipt;\r\n        \r\n        // console.log(item);\r\n        // ADD PAID BY DETAILS\r\n        const paidBy = bill.paidBy;\r\n        const memberIndex = this.members.indexOf(paidBy);\r\n        let memberReceipt= receipt[memberIndex];\r\n        // memberReceipt.paidByMe = {...memberReceipt.paidByMe, [bill.itemName]: bill.itemAmount}\r\n        memberReceipt.paidByMe.push({name: bill.itemName, amount: bill.itemAmount});\r\n        memberReceipt.paidByMeTotal += bill.itemAmount;\r\n\r\n        // ADD PAID FOR DETAILS\r\n        bill.splitInto.forEach(member=>{\r\n            const memberName = member.name;\r\n            const memberIndex = this.members.indexOf(memberName);\r\n            memberReceipt = receipt[memberIndex];\r\n            const splitAmount = member.amount;\r\n            // memberReceipt.paidForMe = {...memberReceipt.paidForMe, [bill.itemName]: splitAmount}\r\n            memberReceipt.paidForMe.push({name: bill.itemName, amount: splitAmount});\r\n            memberReceipt.paidForMeTotal += splitAmount;\r\n        });\r\n        \r\n        // console.log(receipt);\r\n        // this.setState({\r\n        //     receipt: receipt\r\n        // })\r\n        return receipt;\r\n    }\r\n\r\n    getBill = () => {\r\n        return new Promise((resolve, reject)=>{\r\n            const billName = this.state.billName;\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    // console.log(response);\r\n                    const bill = response.bill;\r\n                    this.members = bill.members;\r\n                    \r\n                    this.members.forEach((member)=>{\r\n                        this.setState({\r\n                            [member]: {isChecked: true, amount: ''}\r\n                        })\r\n                    })\r\n                    this.setState({\r\n                        receipt: bill.receipt,\r\n                        paidBy: this.members[0],\r\n                        isDataAvailable: true,\r\n                    });\r\n                    resolve(true);\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getbill\");\r\n            xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/getbill\");\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", billName);\r\n            xhr.send();\r\n        })\r\n    }\r\n\r\n    renderBillItemForm = () => {\r\n        return (\r\n            <div className=\"manageBill\">\r\n                <BillItemForm \r\n                    ref=\"itemForm\"\r\n                    splitChecked={this.splitChecked} \r\n                    splitEqually={this.splitEqually} \r\n                    setNameAndAmount={this.setNameAndAmount}\r\n\r\n                />\r\n                <form name=\"splitForm\" className=\"splitForm\">\r\n                    <div style={{textAlign: \"right\", marginBottom: \"15px\"}}>\r\n                    <Link to={`/editbill/${this.billName}`}><span className=\"text-icons\" style={{fontSize: 'small'}}>Add Person</span></Link>\r\n                        <span className=\"text-icons\" style={{fontSize: 'small'}} onClick={this.selectAllMembers}>Select All</span>\r\n                        <span className=\"text-icons\" style={{fontSize: 'small'}} onClick={this.resetSplitForm}>Reset</span>\r\n                    </div>\r\n                    {this.getSplitForm()}\r\n                </form>\r\n                <div className=\"memberWiseReceipt\" id=\"memberWiseReceipt\">\r\n                    {this.renderReceipt()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        this.getBill();\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {\r\n                this.state.isSignedIn ? \r\n                    this.state.isBillExist ? \r\n                        this.state.isDataAvailable ?\r\n                            this.renderBillItemForm()\r\n                            : \r\n                            this.getLoadingScreen()\r\n                        :\r\n                        <Error404 message={\"The bill you are looking for does not exist.\"}/>\r\n                    :\r\n                    <GetUser setAppState={this.props.setAppState} />\r\n                }\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ManageBill\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class BillBrief extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            showReceipt: false\r\n        }\r\n    }\r\n\r\n    toggleShowReceipt = () => {\r\n        const showReceipt = this.state.showReceipt;\r\n        this.setState({\r\n            showReceipt: !showReceipt\r\n        })\r\n    }\r\n\r\n    getMembers = (members)=>{\r\n        return (\r\n            members.map((member, i)=>{\r\n                return <span className=\"billMember\" key={i}>{member}</span>\r\n            })\r\n        )\r\n    }\r\n\r\n    renderItem = (name, amount, key) => {\r\n        return <tr key={key}>\r\n            <td>{name}</td>\r\n            <td>{amount.toFixed(2)}</td>\r\n        </tr>\r\n    }\r\n\r\n    renderReceiptItems = (itemList) => {\r\n        let itemListView = [];\r\n        // let key=0;\r\n        itemList.forEach((item,i)=>{\r\n            itemListView.push(this.renderItem(item.name, item.amount, i));\r\n        })\r\n        // for(let item in itemList){\r\n        //     itemListView.push(this.renderItem(item, itemList[item], key++));\r\n        // }\r\n        return itemListView;\r\n    }\r\n\r\n    getReceiptView = (name, memberReceipt, key) => {\r\n        const paidByMeTotal = memberReceipt.paidByMeTotal;\r\n        const paidForMeTotal = memberReceipt.paidForMeTotal;\r\n\r\n        return <div key={key}> \r\n        <div className=\"memberReceiptView\" >\r\n            {/* BRIEFS TABLE */}\r\n            <div> \r\n                <table><tbody>\r\n                    <tr>\r\n                        <td><ins><strong>{name}</strong></ins></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{fontSize: 'small'}}>paid</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{paidByMeTotal.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td  style={{fontSize: 'small'}}>owes</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{paidForMeTotal.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{fontSize: 'small'}}>total</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>{(paidByMeTotal-paidForMeTotal).toFixed(2)}</td>\r\n                    </tr>\r\n                </tbody></table>\r\n            </div>\r\n            {/* PAID BY ME TABLE */}\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{opacity: 0.5}}>paid</td>\r\n                    </tr>\r\n                    {this.renderReceiptItems(memberReceipt.paidByMe)}\r\n                </tbody></table>\r\n            </div>\r\n            \r\n            {/* OWES TABLE */}\r\n            <div>\r\n                <table><tbody>\r\n                    <tr>\r\n                        <td colSpan=\"2\" style={{opacity: 0.5}}>owes</td>\r\n                    </tr>\r\n                    {this.renderReceiptItems(memberReceipt.paidForMe)}\r\n                </tbody></table>\r\n            </div>\r\n        </div>\r\n        <div className=\"dueStatus\">\r\n            <i className=\"material-icons\" \r\n                style={{color: memberReceipt.isDue ? \"var(--white)\" : \"var(--green)\", fontSize: 'x-large'}}\r\n            >\r\n                {memberReceipt.isDue ? \"watch_later\" : \"done_all\"}\r\n            </i>\r\n        </div>\r\n        </div>\r\n    }\r\n\r\n    renderReceipt = () => {\r\n        let receipt = this.props.receipt;\r\n        // console.log(receipt);\r\n        let receiptView = [];\r\n        // let key = 0;\r\n        receipt.forEach((member, i)=>{\r\n            receiptView.push(this.getReceiptView(member.name, receipt[i], i));\r\n        })\r\n        // for(let member in receipt){\r\n        //     receiptView.push(this.getReceiptView(member, receipt[member] ,key++))\r\n        // }\r\n        return receiptView;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"detailedBill\">\r\n                <div className=\"billBrief\" id={this.props.id}>\r\n                    <div className=\"billBriefControls\">\r\n                        <i className=\"material-icons deleteIcon\" onClick={()=>{this.props.deleteBill(this.props.billName)}}>delete</i>\r\n                        <Link to={`/manage/${this.props.billName}`}><i className=\"material-icons editIcon\">edit</i></Link>\r\n                    </div>\r\n                    <div className=\"billBriefDetails\" onClick={this.toggleShowReceipt}>\r\n                        <div className=\"billDateAndName\">\r\n                            <div className=\"billName\">{this.props.billName.replace(\"-\", \" \")}</div>\r\n                            <div className=\"billDate\">{this.props.date}</div>\r\n                        </div>\r\n                        <div className=\"billMembers\">{this.getMembers(this.props.members)}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"receiptView\" style={this.state.showReceipt ? {display: 'block'} : {display: 'none'}}>{this.renderReceipt()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BillBrief\r\n","import React, { Component } from 'react'\r\n\r\nexport class AlertMessage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"alertMessage\" id=\"alertMessage\" style={this.props.style}>\r\n                <h3>Are you sure you want to delete the bill <span style={{textTransform: 'capitalize'}}>{this.props.billName.replace('-',' ')}</span>?</h3>\r\n                \r\n                <span style={{float: \"right\", padding: \"5px 10px\"}} onClick={this.props.cancelDeletion}>Cancel</span>\r\n                <span style={{float: \"right\", padding: \"5px 10px\"}} onClick={()=>{this.props.confirmDeletion(this.props.billName)}}>OK</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlertMessage\r\n","import React, { Component } from 'react';\r\nimport BillBrief from './BillBrief';\r\nimport GetUser from './GetUser';\r\nimport AlertMessage from './AlertMessage';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class AllBills extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.setTitle(\"All Bills\");\r\n        this.email = '';\r\n        this.state = {\r\n            allBills: [],\r\n            isSignedIn: this.getSignedInStatus(),\r\n            isDataAvailable: false,\r\n            isAlertBoxRequired: false,\r\n            billToBeDeleted: ''\r\n        }\r\n    }\r\n\r\n    getSignedInStatus =()=> {\r\n        if(localStorage.getItem(\"isSignedIn\")!==null && localStorage.getItem(\"isSignedIn\")===\"true\"){\r\n            this.email = localStorage.getItem(\"email\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    componentDidMount = ()=>{\r\n        if(!this.state.isSignedIn){\r\n            document.getElementById('linktologin').click();\r\n        }\r\n    }\r\n    \r\n    cancelDeletion = ()=>{\r\n        // console.log(\"deletion canceled.\");\r\n        this.setState({\r\n            isAlertBoxRequired: false,\r\n            billToBeDeleted: ''\r\n        })\r\n    }\r\n\r\n    confirmDeletion = (billName) => {\r\n        // console.log(\"deletion confirmed\");\r\n        this.setState({\r\n            isAlertBoxRequired: false,\r\n            billToBeDeleted: ''\r\n        });\r\n        // console.log(\"deleting\", billName);\r\n        document.getElementById(billName).style.opacity = 0.5;\r\n        document.getElementById(billName).style.pointerEvents = \"none\";\r\n        const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    document.getElementById(billName).style.opacity = 1;\r\n                    document.getElementById(billName).style.pointerEvents = \"auto\";\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const existingBillNames = response.existingBillNames;\r\n                    localStorage.setItem(\"existingBillNames\", JSON.stringify(existingBillNames));\r\n                    const allBills = this.state.allBills;\r\n                    let newAllBills = [];\r\n                    allBills.forEach(bill=>{\r\n                        if(bill.billName !== billName){\r\n                            newAllBills.push(bill);\r\n                        }\r\n                    })\r\n                    this.setState({\r\n                        allBills: newAllBills\r\n                    })\r\n                }\r\n            }\r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/deletebill\");\r\n            xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/deletebill\");\r\n            xhr.setRequestHeader( \"Content-Type\", \"application/json\" );\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billname\", billName);\r\n            xhr.send();\r\n    }\r\n\r\n\r\n    deleteBill = (billName) => {\r\n        this.setState({\r\n            isAlertBoxRequired: true,\r\n            billToBeDeleted: billName\r\n        });\r\n        \r\n    }\r\n    \r\n    getBillBrief = (bill, key) => {\r\n        return <BillBrief \r\n            key={key} \r\n            billName={bill.billName} \r\n            date={new Date(bill.dateCreated).toDateString()} \r\n            members={bill.members} \r\n            id={bill.billName} \r\n            deleteBill={this.deleteBill}\r\n            receipt={bill.receipt}\r\n        />\r\n    }\r\n\r\n    getAllBillBriefs = (allBills) => {\r\n        return allBills.map((bill, i)=>{\r\n            return this.getBillBrief(bill, i);\r\n        })\r\n    }\r\n\r\n    getLoadingScreen = () => {\r\n        this.getAllBills();\r\n        return <div className=\"loadingIconContainer\"><i className=\"material-icons loadingIcon\">refresh</i></div>\r\n    }\r\n    \r\n    getAllBills = () => {\r\n        return new Promise((resolve, reject)=>{\r\n            const billNames = JSON.parse(localStorage.getItem(\"existingBillNames\"));\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState===4 && xhr.status===200){\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    const allBills = response.allBills;\r\n                    this.setState({\r\n                        allBills,\r\n                        isDataAvailable: true\r\n                    });\r\n                    resolve(true);\r\n                }\r\n            }\r\n            \r\n            // xhr.open(\"GET\", \"http://localhost:3090/api/v1/getallbills\");\r\n            xhr.open(\"GET\", \"https://cors-anywhere.herokuapp.com/https://immense-coast-52535.herokuapp.com/api/v1/getallbills\");\r\n            xhr.setRequestHeader( \"Content-Type\", \"application/json\" );\r\n            xhr.setRequestHeader(\"email\", this.email);\r\n            xhr.setRequestHeader(\"billnames\", JSON.stringify(billNames));\r\n                \r\n            xhr.send();\r\n\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/\" id=\"linktologin\"/>\r\n                <div id=\"allBillsContainer\" style={this.state.isAlertBoxRequired ? {pointerEvents: 'none', opacity: '0.5'} : {pointerEvents: 'auto', opacity: '1'}}>\r\n                    {this.state.isSignedIn ? \r\n                    this.state.isDataAvailable ? \r\n                        this.getAllBillBriefs(this.state.allBills)\r\n                        : \r\n                        this.getLoadingScreen() \r\n                    : \r\n                    <GetUser setAppState={this.props.setAppState}/>\r\n                    \r\n                }\r\n                </div>\r\n\r\n                <AlertMessage \r\n                    style={this.state.isAlertBoxRequired ? {display: 'block'} : {display: 'none'}} \r\n                    billName={this.state.billToBeDeleted}\r\n                    cancelDeletion={this.cancelDeletion}\r\n                    confirmDeletion={this.confirmDeletion}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllBills\r\n","import React, { Component } from 'react';\n// BrowserRouter as Router,\nimport {\n  HashRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Titlebar from './components/Titlebar';\nimport AddIcon from './components/AddIcon';\nimport NewBillForm from './components/NewBillForm';\nimport EditBillForm from './components/EditBillForm';\nimport ManageBill from './components/ManageBill';\nimport GetUser from './components/GetUser';\nimport AllBills from './components/AllBills';\n\nexport class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = this.init();\n  }\n\n  init = () => {\n    let appState = {\n      title: 'Log in',\n      existingMembers: [],\n      allBillNames: [],\n      currentBill: {},\n      showLogoutButton: true\n    }\n    return appState;\n  }\n\n  setTitle = (title) => {\n    this.setState({\n      title: title\n    })\n  }\n\n  setAppState = (key, value) => {\n    this.setState({\n      [key]: value\n    });\n  }\n\n  render() {\n    return (\n      <HashRouter basename=\"/\" >\n        <Titlebar showLogoutButton={this.state.showLogoutButton}>{this.state.title}</Titlebar>\n        <Switch>\n          \n          {/* HOMEPAGE */}\n          <Route path=\"/home\">\n            <AddIcon></AddIcon>\n            <AllBills setTitle={this.setTitle} setAppState={this.setAppState}/>\n          </Route>\n\n          {/* CREATE NEW BILL */}\n          <Route path=\"/newbill\">\n            <NewBillForm \n              setTitle={this.setTitle} \n              existingMembers={this.state.existingMembers} \n              allBillNames={this.state.allBillNames}\n              email={this.state.email}\n              setAppState={this.setAppState}\n            />\n          </Route>\n\n          <Route path=\"/editbill/:id\">\n            <EditBillForm\n              setAppState={this.setAppState}\n            />\n          </Route>\n          \n          {/* MANAGE BILL */}\n          <Route path=\"/manage/:id\">\n            <ManageBill setTitle={this.setTitle} setAppState={this.setAppState} currentBill={this.state.currentBill} /> \n          </Route>\n            \n          {/* SIGN OR LOG IN */}\n          <Route path=\"/\">\n            <GetUser setAppState={this.setAppState} isSignedIn={this.state.isSignedIn}/>\n          </Route>\n          \n        </Switch>\n      </HashRouter>\n      \n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}